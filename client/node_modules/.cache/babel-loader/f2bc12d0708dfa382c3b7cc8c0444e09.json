{"ast":null,"code":"var _jsxFileName = \"/Users/aidanhall/Desktop/nsft/client/src/components/Bid/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./Bid.module.sass\";\nimport Form from \"../Form\";\nimport { formatAmountInput } from \"../../mocks/functions\";\nimport { useParams } from \"react-router\";\nimport { useUser } from \"../../providers/UserProvider\";\nimport Loader from \"../Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bid = ({\n  className,\n  data\n}) => {\n  _s();\n\n  const [bid, setBid] = useState(data.minNextBid);\n  console.log(bid);\n  const [nofunds, setNofunds] = useState(false);\n  const [visibleModalBid, setVisibleModalBid] = useState(false);\n  const {\n    address,\n    nftid\n  } = useParams();\n  const {\n    bidOnAuction,\n    balance,\n    loading,\n    error,\n    status,\n    getBalance,\n    user\n  } = useUser();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setNofunds(false);\n\n    if (balance < bid) {\n      setNofunds(true);\n      return;\n    }\n\n    await bidOnAuction(parseInt(nftid), address, formatAmountInput(bid));\n    await getBalance();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(className, styles.checkout),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(\"h4\", styles.title),\n      children: \"Place a bid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.info,\n      children: [\"You are about to bid on \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.text,\n      children: [\"Minimum bid $\", parseInt(data.minNextBid).toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.table,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: styles.form,\n          onSubmit: handleSubmit,\n          value: parseInt(bid),\n          placeholder: \"Bid Amount\",\n          setValue: setBid,\n          type: \"number\",\n          name: \"bid\",\n          step: 1,\n          min: parseInt(data.minNextBid)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.item,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cn(\"button loading\", styles.button),\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          className: styles.loader,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(styles.item, styles.error),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cn(\"button error\", styles.button),\n        children: \"Something went wrong :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : status.status === 4 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(styles.item, styles.done),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cn(\"button done\", styles.button),\n        children: \"Success! Your bid has been placed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.btns,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cn(\"button\", styles.button),\n        onClick: handleSubmit,\n        children: \"Place a bid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bid, \"hkMXx3xk7QbEp8N0i8gKl8qk7m8=\", false, function () {\n  return [useParams, useUser];\n});\n\n_c = Bid;\nexport default Bid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bid\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft/client/src/components/Bid/index.js"],"names":["React","useState","cn","styles","Form","formatAmountInput","useParams","useUser","Loader","Bid","className","data","bid","setBid","minNextBid","console","log","nofunds","setNofunds","visibleModalBid","setVisibleModalBid","address","nftid","bidOnAuction","balance","loading","error","status","getBalance","user","handleSubmit","e","preventDefault","parseInt","checkout","title","info","text","toString","table","row","form","item","button","loader","done","btns"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./Bid.module.sass\";\nimport Form from \"../Form\";\nimport { formatAmountInput } from \"../../mocks/functions\";\nimport { useParams } from \"react-router\";\nimport { useUser } from \"../../providers/UserProvider\";\nimport Loader from \"../Loader\";\n\nconst Bid = ({ className, data }) => {\n  const [bid, setBid] = useState(data.minNextBid);\n  console.log(bid);\n  const [nofunds, setNofunds] = useState(false);\n  const [visibleModalBid, setVisibleModalBid] = useState(false);\n\n  const { address, nftid } = useParams();\n  const { bidOnAuction, balance, loading, error, status, getBalance, user } =\n    useUser();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setNofunds(false);\n    if (balance < bid) {\n      setNofunds(true);\n      return;\n    }\n    await bidOnAuction(parseInt(nftid), address, formatAmountInput(bid));\n    await getBalance();\n  };\n\n  return (\n    <div className={cn(className, styles.checkout)}>\n      <div className={cn(\"h4\", styles.title)}>Place a bid</div>\n      <div className={styles.info}>\n        You are about to bid on <strong>{data.title}</strong>\n      </div>\n      <div className={styles.text}>\n        Minimum bid ${parseInt(data.minNextBid).toString()}\n      </div>\n      <div className={styles.table}>\n        <div className={styles.row}>\n          <Form\n            className={styles.form}\n            onSubmit={handleSubmit}\n            value={parseInt(bid)}\n            placeholder=\"Bid Amount\"\n            setValue={setBid}\n            type=\"number\"\n            name=\"bid\"\n            step={1}\n            min={parseInt(data.minNextBid)}\n          />\n        </div>\n      </div>\n      {/*<div className={styles.btns}>\n        <button className={cn(\"button\", styles.button)} onClick={handleSubmit}>\n          Place a bid\n        </button>\n  </div>*/}\n      {loading ? (\n        <div className={styles.item}>\n          <button className={cn(\"button loading\", styles.button)}>\n            <Loader className={styles.loader} color=\"white\" />\n          </button>\n        </div>\n      ) : (error ? (\n        <div className={cn(styles.item, styles.error)}>\n          <button className={cn(\"button error\", styles.button)}>Something went wrong :(</button>\n        </div>\n      ) :\n        (status.status === 4 ? (\n          <div className={cn(styles.item, styles.done)}>\n          <button className={cn(\"button done\", styles.button)}>Success! Your bid has been placed</button>\n        </div>\n        ) : (<div className={styles.btns}>\n          <button\n            className={cn(\"button\", styles.button)}\n            onClick={handleSubmit}\n          >\n            Place a bid\n          </button>\n        </div>))\n      )}\n    </div>\n  );\n};\n\nexport default Bid;\n"]},"metadata":{},"sourceType":"module"}