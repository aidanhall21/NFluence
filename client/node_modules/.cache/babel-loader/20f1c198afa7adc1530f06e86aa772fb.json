{"ast":null,"code":"// File: ./sign.js\nimport { ec as EC } from \"elliptic\";\nimport { hash } from \"./hash\";\nconst ec = new EC(\"p256\");\nexport function sign(privateKey, message) {\n  const key = ec.keyFromPrivate(Buffer.from(privateKey, \"hex\"));\n  const sig = key.sign(hash(message));\n  const n = 32;\n  const r = sig.r.toArrayLike(Buffer, \"be\", n);\n  const s = sig.s.toArrayLike(Buffer, \"be\", n);\n  return Buffer.concat([r, s]).toString(\"hex\");\n}","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft-v3/client/src/services/sign.js"],"names":["ec","EC","hash","sign","privateKey","message","key","keyFromPrivate","Buffer","from","sig","n","r","toArrayLike","s","concat","toString"],"mappings":"AAAA;AACA,SAASA,EAAE,IAAIC,EAAf,QAAyB,UAAzB;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,MAAMF,EAAE,GAAG,IAAIC,EAAJ,CAAO,MAAP,CAAX;AAEA,OAAO,SAASE,IAAT,CAAcC,UAAd,EAA0BC,OAA1B,EAAmC;AACxC,QAAMC,GAAG,GAAGN,EAAE,CAACO,cAAH,CAAkBC,MAAM,CAACC,IAAP,CAAYL,UAAZ,EAAwB,KAAxB,CAAlB,CAAZ;AACA,QAAMM,GAAG,GAAGJ,GAAG,CAACH,IAAJ,CAASD,IAAI,CAACG,OAAD,CAAb,CAAZ;AACA,QAAMM,CAAC,GAAG,EAAV;AACA,QAAMC,CAAC,GAAGF,GAAG,CAACE,CAAJ,CAAMC,WAAN,CAAkBL,MAAlB,EAA0B,IAA1B,EAAgCG,CAAhC,CAAV;AACA,QAAMG,CAAC,GAAGJ,GAAG,CAACI,CAAJ,CAAMD,WAAN,CAAkBL,MAAlB,EAA0B,IAA1B,EAAgCG,CAAhC,CAAV;AACA,SAAOH,MAAM,CAACO,MAAP,CAAc,CAACH,CAAD,EAAIE,CAAJ,CAAd,EAAsBE,QAAtB,CAA+B,KAA/B,CAAP;AACD","sourcesContent":["// File: ./sign.js\nimport { ec as EC } from \"elliptic\";\nimport { hash } from \"./hash\";\n\nconst ec = new EC(\"p256\");\n\nexport function sign(privateKey, message) {\n  const key = ec.keyFromPrivate(Buffer.from(privateKey, \"hex\"));\n  const sig = key.sign(hash(message));\n  const n = 32;\n  const r = sig.r.toArrayLike(Buffer, \"be\", n);\n  const s = sig.s.toArrayLike(Buffer, \"be\", n);\n  return Buffer.concat([r, s]).toString(\"hex\");\n}"]},"metadata":{},"sourceType":"module"}