{"ast":null,"code":"var _jsxFileName = \"/Users/aidanhall/Desktop/nsft/client/src/screens/ProfileEdit/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./ProfileEdit.module.sass\";\nimport Control from \"../../components/Control\";\nimport TextInput from \"../../components/TextInput\";\nimport TextArea from \"../../components/TextArea\";\nimport { useAuth } from \"../../providers/AuthProvider\";\nimport { useUser } from \"../../providers/UserProvider\";\nimport axios from \"axios\";\nimport Form from \"../../components/Form\";\nimport { mutate, tx } from \"@onflow/fcl\";\nimport { MINT_UTILITY_COIN } from \"../../flow/mint-utility-coin.tx\";\nimport Loader from \"../../components/Loader\";\nimport { formatAmountInput } from \"../../mocks/functions\";\nimport { authorizationFunction } from \"../../services/authorization-function\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst breadcrumbs = [{\n  title: \"Home\",\n  url: \"/\"\n}, {\n  title: \"Edit Profile\"\n}];\nlet api_node;\nprocess.env.NODE_ENV === \"production\" ? api_node = \"\" : api_node = process.env.REACT_APP_LOCAL_API_NODE;\n\nconst ProfileEdit = () => {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  const {\n    profile,\n    getBalance\n  } = useUser();\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [change, setChange] = useState(false);\n  const [bio, setBio] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [twitter, setTwitter] = useState(\"\");\n  const [insta, setInsta] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [errors, setErrors] = useState(false);\n  const [deposit, setDeposit] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n\n  const onProfilePhotoChange = e => {\n    let data = new FormData();\n    let file = e.target.files[0];\n    data.append(\"file\", file, (user === null || user === void 0 ? void 0 : user.addr) + \"-profile.jpg\");\n    axios.post(`${api_node}/api/v1/upload`, data, {});\n    profile.db ? axios.put(`${api_node}/api/v1/user/update`, {\n      name: profile.name,\n      email: profile.email,\n      handle: profile.handle,\n      cover_image: profile.cover_image,\n      profile_image: true,\n      address: user === null || user === void 0 ? void 0 : user.addr,\n      bio: profile.bio,\n      url: profile.url,\n      twitter: profile.twitter,\n      instagram: profile.instagram\n    }) : axios.post(`${api_node}/api/v1/user`, {\n      name: profile.name,\n      email: profile.email,\n      handle: profile.handle,\n      avatar: profile.avatar,\n      address: user === null || user === void 0 ? void 0 : user.addr,\n      db: true,\n      cover_image: false,\n      profile_image: true,\n      bio: profile.bio,\n      url: profile.url,\n      twitter: profile.twitter,\n      instagram: profile.instagram,\n      verified: profile.verified\n    });\n    window.location.reload();\n  };\n\n  const handleNameChange = async e => {\n    setName(e);\n  };\n\n  const handleUsernameChange = async e => {\n    setUsername(e);\n    setChange(true);\n  };\n\n  const handleBioChange = async e => {\n    setBio(e);\n  };\n\n  const handleUrlChange = async e => {\n    setUrl(e);\n  };\n\n  const handleTwitterChange = async e => {\n    setTwitter(e);\n  };\n\n  const handleInstagramChange = async e => {\n    setInsta(e);\n  };\n\n  const handleEmailChange = async e => {\n    setEmail(e);\n  };\n\n  useEffect(() => {\n    setName(profile.name);\n    setUsername(profile.handle);\n    setBio(profile.bio);\n    setUrl(profile.url);\n    setTwitter(profile.twitter);\n    setInsta(profile.instagram);\n    setEmail(profile.email);\n  }, [profile]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let taken = false;\n    console.log(change);\n    console.log(username);\n\n    if (change) {\n      const API = await axios.get(`${api_node}/api/v1/usernames/${username}`);\n      const serverResponse = API.data;\n      console.log(serverResponse);\n      console.log(serverResponse[0][\"num_unique\"]);\n\n      if (serverResponse[0].num_unique !== '0') {\n        taken = true;\n      }\n    }\n\n    if (taken) {\n      setErrors(true);\n      return;\n    } else {\n      profile.db ? axios.put(`${api_node}/api/v1/user/update`, {\n        name: name,\n        email: email,\n        handle: username,\n        cover_image: profile.cover_image,\n        profile_image: profile.profile_image,\n        address: user === null || user === void 0 ? void 0 : user.addr,\n        bio: bio,\n        url: url,\n        twitter: twitter,\n        instagram: insta\n      }) : axios.post(`${api_node}/api/v1/user`, {\n        name: name,\n        email: email,\n        avatar: profile.avatar,\n        db: true,\n        cover_image: profile.cover_image,\n        profile_image: profile.profile_image,\n        handle: username,\n        address: user === null || user === void 0 ? void 0 : user.addr,\n        bio: bio,\n        url: url,\n        twitter: twitter,\n        instagram: insta,\n        verified: profile.verified\n      });\n      setUpdateSuccess(true);\n      setTimeout(() => {\n        window.location.reload();\n      }, 5000);\n    }\n  };\n\n  const onDepositSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      let res = await mutate({\n        cadence: MINT_UTILITY_COIN,\n        args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address), arg(formatAmountInput(deposit), t.UFix64)],\n        limit: 200,\n        authz: authorizationFunction\n      });\n      let txStatus = await tx(res).onceSealed();\n      setSuccess(true);\n      setLoading(false);\n      getBalance();\n      return txStatus;\n    } catch (err) {\n      setError(true);\n      setLoading(false);\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.page,\n    children: [/*#__PURE__*/_jsxDEV(Control, {\n      className: styles.control,\n      item: breadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(\"section-pt80\", styles.section),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"container\", styles.container),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.top,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: cn(\"h2\", styles.title),\n            children: \"Edit profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.row,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.col,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.user,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.avatar,\n                children: profile.profile_image ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `/user-images/${user === null || user === void 0 ? void 0 : user.addr}-profile.jpg`,\n                  alt: \"Avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `data:image/png;base64,${profile.avatar}`,\n                  alt: \"Avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.col,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.list,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.item,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.category,\n                  children: \"Account info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.fieldset,\n                  children: [/*#__PURE__*/_jsxDEV(TextInput, {\n                    className: styles.field,\n                    label: \"name\",\n                    name: \"Name\",\n                    type: \"text\",\n                    placeholder: profile.name ? profile.name : \"Enter your name\",\n                    required: true,\n                    onChange: e => handleNameChange(e.currentTarget.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n                    className: styles.field,\n                    label: \"Username\",\n                    name: \"Handle\",\n                    type: \"text\",\n                    placeholder: profile.handle ? profile.handle : \"Enter your Username\",\n                    required: true,\n                    onChange: e => handleUsernameChange(e.currentTarget.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n                    className: styles.field,\n                    label: \"email\",\n                    name: \"Email\",\n                    type: \"text\",\n                    placeholder: profile.email ? profile.email : \"Enter your email\",\n                    required: true,\n                    onChange: e => handleEmailChange(e.currentTarget.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n                    className: styles.field,\n                    label: \"Bio\",\n                    name: \"Bio\",\n                    placeholder: profile.bio ? profile.bio : \"About yourself in a few words\",\n                    required: \"required\",\n                    onChange: e => handleBioChange(e.currentTarget.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.item,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.category,\n                  children: \"Fund Your Account with USD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.fieldset,\n                  children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.item,\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: cn(\"button loading\", styles.button),\n                      children: /*#__PURE__*/_jsxDEV(Loader, {\n                        className: styles.loader,\n                        color: \"white\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 23\n                  }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: cn(styles.item, styles.done),\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: cn(\"button success\", styles.button),\n                      children: \"Deposit Successful!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 23\n                  }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: cn(styles.item, styles.error),\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: cn(\"button error\", styles.button),\n                      children: \"Deposit Failed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 23\n                  }, this), !loading && !error && !success && /*#__PURE__*/_jsxDEV(Form, {\n                    className: styles.form,\n                    onSubmit: e => onDepositSubmit(e),\n                    placeholder: \"Enter an amount in USD\",\n                    setValue: setDeposit,\n                    type: \"number\",\n                    name: \"price\",\n                    step: 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.item,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.category,\n                  children: \"Social\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.fieldset,\n                  children: [/*#__PURE__*/_jsxDEV(TextInput, {\n                    className: styles.field,\n                    label: \"portfolio or website\",\n                    name: \"Portfolio\",\n                    type: \"text\",\n                    placeholder: profile.url ? profile.url : \"Enter URL\",\n                    required: true,\n                    onChange: e => handleUrlChange(e.currentTarget.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n                    className: styles.field,\n                    label: \"twitter\",\n                    name: \"Twitter\",\n                    type: \"text\",\n                    placeholder: profile.twitter ? profile.twitter : \"@twitter username\",\n                    required: true,\n                    onChange: e => handleTwitterChange(e.currentTarget.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n                    className: styles.field,\n                    label: \"instagram\",\n                    name: \"Instagram\",\n                    type: \"text\",\n                    placeholder: profile.instagram ? profile.instagram : \"@instagram username\",\n                    required: true,\n                    onChange: e => handleInstagramChange(e.currentTarget.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.btns,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: cn(\"button\", styles.button),\n                onClick: e => handleSubmit(e),\n                children: \"Update Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 17\n              }, this), errors && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Your username has been taken already :(\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileEdit, \"W7Hrzs1MJoa/alyvlT2s/nrKB9o=\", false, function () {\n  return [useAuth, useUser];\n});\n\n_c = ProfileEdit;\nexport default ProfileEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileEdit\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft/client/src/screens/ProfileEdit/index.js"],"names":["React","useEffect","useState","cn","styles","Control","TextInput","TextArea","useAuth","useUser","axios","Form","mutate","tx","MINT_UTILITY_COIN","Loader","formatAmountInput","authorizationFunction","breadcrumbs","title","url","api_node","process","env","NODE_ENV","REACT_APP_LOCAL_API_NODE","ProfileEdit","user","profile","getBalance","name","setName","username","setUsername","change","setChange","bio","setBio","setUrl","twitter","setTwitter","insta","setInsta","email","setEmail","errors","setErrors","deposit","setDeposit","loading","setLoading","success","setSuccess","error","setError","updateSuccess","setUpdateSuccess","onProfilePhotoChange","e","data","FormData","file","target","files","append","addr","post","db","put","handle","cover_image","profile_image","address","instagram","avatar","verified","window","location","reload","handleNameChange","handleUsernameChange","handleBioChange","handleUrlChange","handleTwitterChange","handleInstagramChange","handleEmailChange","handleSubmit","preventDefault","taken","console","log","API","get","serverResponse","num_unique","setTimeout","onDepositSubmit","res","cadence","args","arg","t","Address","UFix64","limit","authz","txStatus","onceSealed","err","page","control","section","container","top","row","col","list","item","category","fieldset","field","currentTarget","value","button","loader","done","form","btns"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./ProfileEdit.module.sass\";\nimport Control from \"../../components/Control\";\nimport TextInput from \"../../components/TextInput\";\nimport TextArea from \"../../components/TextArea\";\nimport { useAuth } from \"../../providers/AuthProvider\";\nimport { useUser } from \"../../providers/UserProvider\";\nimport axios from \"axios\";\nimport Form from \"../../components/Form\";\nimport { mutate, tx } from \"@onflow/fcl\";\nimport { MINT_UTILITY_COIN } from \"../../flow/mint-utility-coin.tx\";\nimport Loader from \"../../components/Loader\";\nimport { formatAmountInput } from \"../../mocks/functions\";\nimport { authorizationFunction } from \"../../services/authorization-function\";\n\nconst breadcrumbs = [\n  {\n    title: \"Home\",\n    url: \"/\",\n  },\n  {\n    title: \"Edit Profile\",\n  },\n];\n\nlet api_node;\nprocess.env.NODE_ENV === \"production\"\n  ? (api_node = \"\")\n  : (api_node = process.env.REACT_APP_LOCAL_API_NODE);\n\nconst ProfileEdit = () => {\n  const { user } = useAuth();\n  const { profile, getBalance } = useUser();\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [change, setChange] = useState(false);\n  const [bio, setBio] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [twitter, setTwitter] = useState(\"\");\n  const [insta, setInsta] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [errors, setErrors] = useState(false);\n  const [deposit, setDeposit] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  const [updateSuccess, setUpdateSuccess] = useState(false)\n\n  const onProfilePhotoChange = (e) => {\n    let data = new FormData();\n    let file = e.target.files[0];\n    data.append(\"file\", file, user?.addr + \"-profile.jpg\");\n    axios.post(`${api_node}/api/v1/upload`, data, {});\n    profile.db\n      ? axios.put(`${api_node}/api/v1/user/update`, {\n          name: profile.name,\n          email: profile.email,\n          handle: profile.handle,\n          cover_image: profile.cover_image,\n          profile_image: true,\n          address: user?.addr,\n          bio: profile.bio,\n          url: profile.url,\n          twitter: profile.twitter,\n          instagram: profile.instagram,\n        })\n      : axios.post(`${api_node}/api/v1/user`, {\n          name: profile.name,\n          email: profile.email,\n          handle: profile.handle,\n          avatar: profile.avatar,\n          address: user?.addr,\n          db: true,\n          cover_image: false,\n          profile_image: true,\n          bio: profile.bio,\n          url: profile.url,\n          twitter: profile.twitter,\n          instagram: profile.instagram,\n          verified: profile.verified\n        });\n    window.location.reload();\n  };\n\n  const handleNameChange = async (e) => {\n    setName(e);\n  };\n\n  const handleUsernameChange = async (e) => {\n    setUsername(e);\n    setChange(true);\n  };\n\n  const handleBioChange = async (e) => {\n    setBio(e);\n  };\n\n  const handleUrlChange = async (e) => {\n    setUrl(e);\n  };\n\n  const handleTwitterChange = async (e) => {\n    setTwitter(e);\n  };\n\n  const handleInstagramChange = async (e) => {\n    setInsta(e);\n  };\n\n  const handleEmailChange = async (e) => {\n    setEmail(e);\n  };\n\n  useEffect(() => {\n    setName(profile.name);\n    setUsername(profile.handle);\n    setBio(profile.bio);\n    setUrl(profile.url);\n    setTwitter(profile.twitter);\n    setInsta(profile.instagram);\n    setEmail(profile.email);\n  }, [profile]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let taken = false;\n    console.log(change)\n    console.log(username)\n\n    if (change) {\n      const API = await axios.get(`${api_node}/api/v1/usernames/${username}`);\n      const serverResponse = API.data;\n      console.log(serverResponse)\n      console.log(serverResponse[0][\"num_unique\"])\n\n      if (serverResponse[0].num_unique !== '0') {\n        taken = true;\n      }\n    }\n    if (taken) {\n      setErrors(true);\n      return;\n    } else {\n      profile.db\n        ? axios.put(`${api_node}/api/v1/user/update`, {\n            name: name,\n            email: email,\n            handle: username,\n            cover_image: profile.cover_image,\n            profile_image: profile.profile_image,\n            address: user?.addr,\n            bio: bio,\n            url: url,\n            twitter: twitter,\n            instagram: insta,\n          })\n        : axios.post(`${api_node}/api/v1/user`, {\n            name: name,\n            email: email,\n            avatar: profile.avatar,\n            db: true,\n            cover_image: profile.cover_image,\n            profile_image: profile.profile_image,\n            handle: username,\n            address: user?.addr,\n            bio: bio,\n            url: url,\n            twitter: twitter,\n            instagram: insta,\n            verified: profile.verified\n          });\n      setUpdateSuccess(true)\n      setTimeout(() => {\n        window.location.reload();\n      }, 5000)\n    }\n  };\n\n  const onDepositSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      let res = await mutate({\n        cadence: MINT_UTILITY_COIN,\n        args: (arg, t) => [\n          arg(user?.addr, t.Address),\n          arg(formatAmountInput(deposit), t.UFix64),\n        ],\n        limit: 200,\n        authz: authorizationFunction\n      });\n      let txStatus = await tx(res).onceSealed();\n      setSuccess(true);\n      setLoading(false);\n      getBalance()\n      return txStatus;\n    } catch (err) {\n      setError(true);\n      setLoading(false);\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className={styles.page}>\n      <Control className={styles.control} item={breadcrumbs} />\n      <div className={cn(\"section-pt80\", styles.section)}>\n        <div className={cn(\"container\", styles.container)}>\n          <div className={styles.top}>\n            <h1 className={cn(\"h2\", styles.title)}>Edit profile</h1>\n          </div>\n          <div className={styles.row}>\n            <div className={styles.col}>\n              <div className={styles.user}>\n                <div className={styles.avatar}>\n                  {profile.profile_image ? (\n                    <img\n                      src={`/user-images/${user?.addr}-profile.jpg`}\n                      alt=\"Avatar\"\n                    />\n                  ) : (\n                    <img\n                      src={`data:image/png;base64,${profile.avatar}`}\n                      alt=\"Avatar\"\n                    />\n                  )}\n                </div>\n                {/*<div className={styles.details}>\n                  <div className={styles.stage}>Profile photo</div>\n                  <div className={styles.file}>\n                    <button\n                      className={cn(\n                        \"button-stroke button-small\",\n                        styles.button\n                      )}\n                    >\n                      Upload\n                    </button>\n                    <input\n                      className={styles.load}\n                      type=\"file\"\n                      name=\"file\"\n                      accept=\"image/*\"\n                      onChange={onProfilePhotoChange}\n                    />\n                  </div>\n                      </div>*/}\n              </div>\n            </div>\n            <div className={styles.col}>\n              <div className={styles.list}>\n                <div className={styles.item}>\n                  <div className={styles.category}>Account info</div>\n                  <div className={styles.fieldset}>\n                    <TextInput\n                      className={styles.field}\n                      label=\"name\"\n                      name=\"Name\"\n                      type=\"text\"\n                      placeholder={\n                        profile.name ? profile.name : \"Enter your name\"\n                      }\n                      required\n                      onChange={(e) => handleNameChange(e.currentTarget.value)}\n                    />\n                    <TextInput\n                      className={styles.field}\n                      label=\"Username\"\n                      name=\"Handle\"\n                      type=\"text\"\n                      placeholder={\n                        profile.handle ? profile.handle : \"Enter your Username\"\n                      }\n                      required\n                      onChange={(e) =>\n                        handleUsernameChange(e.currentTarget.value)\n                      }\n                    />\n\n                    <TextInput\n                      className={styles.field}\n                      label=\"email\"\n                      name=\"Email\"\n                      type=\"text\"\n                      placeholder={\n                        profile.email ? profile.email : \"Enter your email\"\n                      }\n                      required\n                      onChange={(e) => handleEmailChange(e.currentTarget.value)}\n                    />\n                    <TextArea\n                      className={styles.field}\n                      label=\"Bio\"\n                      name=\"Bio\"\n                      placeholder={\n                        profile.bio\n                          ? profile.bio\n                          : \"About yourself in a few words\"\n                      }\n                      required=\"required\"\n                      onChange={(e) => handleBioChange(e.currentTarget.value)}\n                    />\n                  </div>\n                </div>\n                <div className={styles.item}>\n                  <div className={styles.category}>\n                    Fund Your Account with USD\n                  </div>\n                  <div className={styles.fieldset}>\n                    {loading && (\n                      <div className={styles.item}>\n                        <button className={cn(\"button loading\", styles.button)}>\n                          <Loader className={styles.loader} color=\"white\" />\n                        </button>\n                      </div>\n                    )}\n                    {success && (\n                      <div className={cn(styles.item, styles.done)}>\n                        <button className={cn(\"button success\", styles.button)}>\n                          Deposit Successful!\n                        </button>\n                      </div>\n                    )}\n                    {error && (\n                      <div className={cn(styles.item, styles.error)}>\n                        <button className={cn(\"button error\", styles.button)}>\n                          Deposit Failed\n                        </button>\n                      </div>\n                    )}\n                    {!loading && !error && !success && (\n                      <Form\n                        className={styles.form}\n                        onSubmit={(e) => onDepositSubmit(e)}\n                        placeholder=\"Enter an amount in USD\"\n                        setValue={setDeposit}\n                        type=\"number\"\n                        name=\"price\"\n                        step={1}\n                      />\n                    )}\n                  </div>\n                </div>\n                <div className={styles.item}>\n                  <div className={styles.category}>Social</div>\n                  <div className={styles.fieldset}>\n                    <TextInput\n                      className={styles.field}\n                      label=\"portfolio or website\"\n                      name=\"Portfolio\"\n                      type=\"text\"\n                      placeholder={profile.url ? profile.url : \"Enter URL\"}\n                      required\n                      onChange={(e) => handleUrlChange(e.currentTarget.value)}\n                    />\n                    <TextInput\n                      className={styles.field}\n                      label=\"twitter\"\n                      name=\"Twitter\"\n                      type=\"text\"\n                      placeholder={\n                        profile.twitter ? profile.twitter : \"@twitter username\"\n                      }\n                      required\n                      onChange={(e) =>\n                        handleTwitterChange(e.currentTarget.value)\n                      }\n                    />\n                    <TextInput\n                      className={styles.field}\n                      label=\"instagram\"\n                      name=\"Instagram\"\n                      type=\"text\"\n                      placeholder={\n                        profile.instagram\n                          ? profile.instagram\n                          : \"@instagram username\"\n                      }\n                      required\n                      onChange={(e) =>\n                        handleInstagramChange(e.currentTarget.value)\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className={styles.btns}>\n                <button\n                  className={cn(\"button\", styles.button)}\n                  onClick={(e) => handleSubmit(e)}\n                >\n                  Update Profile\n                </button>\n                {errors && (\n                  <div>Your username has been taken already :(</div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileEdit;\n"]},"metadata":{},"sourceType":"module"}