{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer } from \"react\";\nimport { userNsftReducer } from \"../reducer/userNsftReducer\";\nimport { mutate, query, tx } from '@onflow/fcl';\nimport { MINT_NSFT } from \"../flow/mint-nsft.tx\";\nimport { authorizationFunction } from \"../services/authorization-function\";\nimport { GET_TOKEN_DATA } from \"../flow/get-token-data.script\";\nimport { CREATE_AUCTION } from \"../flow/create-auction.tx\";\nimport { GET_AUCTION_IDS } from \"../flow/get-auction-ids.script\";\nimport { GET_SINGLE_AUCTION_DATA } from \"../flow/get-single-auction-data.script\";\nimport { SETTLE_AUCTION } from \"../flow/settle-auction.tx\";\nimport { BID_ON_AUCTION } from \"../flow/bid-auction.tx\";\nimport { GET_OWNED_IDS } from \"../flow/get-owned-token-ids.script\";\nimport axios from \"axios\";\nlet api_node;\nprocess.env.NODE_ENV === \"production\" ? api_node = '' : api_node = process.env.REACT_APP_LOCAL_API_NODE;\nexport default function useUserNsfts(user) {\n  _s();\n\n  const [state, dispatch] = useReducer(userNsftReducer, {\n    loading: false,\n    error: false,\n    minted_data: [],\n    auction_data: [],\n    owned_data: [],\n    owned_ids: [],\n    bids_data: [],\n    txStatus: {}\n  });\n\n  const runScript = async (address, id) => {\n    console.log('HI', address, id);\n    let auction_data = await query({\n      cadence: GET_SINGLE_AUCTION_DATA,\n      args: (arg, t) => [arg(address, t.Address), arg(id, t.UInt64)]\n    });\n    console.log(auction_data);\n    const {\n      nftData\n    } = auction_data;\n    return { ...auction_data,\n      ...nftData\n    };\n  };\n\n  const fetchAuctionData = async (address, data) => {\n    return Promise.all(data.map(id => {\n      return runScript(address, id);\n    }));\n  };\n\n  const fetchBidData = async data => {\n    return Promise.all(data.map(el => {\n      return runScript(el.auctionuser, el.tokenid);\n    }));\n  };\n\n  const fetchUserMintedNsfts = async () => {\n    dispatch({\n      type: 'PROCESSING'\n    });\n\n    try {\n      let res = await query({\n        cadence: GET_TOKEN_DATA,\n        args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address)]\n      });\n      console.log(res);\n      let minted_nsfts = [];\n\n      if (res !== null) {\n        minted_nsfts = res.filter(token => token.creatorAddress === (user === null || user === void 0 ? void 0 : user.addr));\n      }\n\n      dispatch({\n        type: 'MINTED_SUCCESS',\n        payload: minted_nsfts\n      });\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: 'ERROR'\n      });\n    }\n  };\n\n  const fetchUserOwnedIds = async () => {\n    dispatch({\n      type: 'PROCESSING'\n    });\n\n    try {\n      let res = await query({\n        cadence: GET_OWNED_IDS,\n        args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address)]\n      });\n      console.log(res);\n      let owned_nsfts = [];\n\n      if (res !== null) {\n        owned_nsfts = res.filter(token => token.creatorAddress !== (user === null || user === void 0 ? void 0 : user.addr));\n      }\n\n      dispatch({\n        type: 'ID_SUCCESS',\n        payload: owned_nsfts\n      });\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: 'ERROR'\n      });\n    }\n  };\n\n  const fetchUserOwnedNsfts = async () => {\n    dispatch({\n      type: 'PROCESSING'\n    });\n\n    try {\n      let res = await query({\n        cadence: GET_TOKEN_DATA,\n        args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address)]\n      });\n      console.log(res);\n      let owned_nsfts = [];\n\n      if (res !== null) {\n        owned_nsfts = res.filter(token => token.creatorAddress !== (user === null || user === void 0 ? void 0 : user.addr));\n      }\n\n      dispatch({\n        type: 'OWNED_SUCCESS',\n        payload: owned_nsfts\n      });\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: 'ERROR'\n      });\n    }\n  };\n\n  const fetchUserLiveAuctions = async () => {\n    dispatch({\n      type: 'PROCESSING'\n    });\n\n    try {\n      let res = await query({\n        cadence: GET_AUCTION_IDS,\n        args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address)]\n      });\n      let data = await fetchAuctionData(user === null || user === void 0 ? void 0 : user.addr, res);\n      dispatch({\n        type: 'AUCTION_SUCCESS',\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'ERROR'\n      });\n    }\n  };\n\n  const fetchUserLiveBids = async () => {\n    dispatch({\n      type: 'PROCESSING'\n    });\n\n    try {\n      let response = await axios.get(`${api_node}/api/v1/bids/${user === null || user === void 0 ? void 0 : user.addr}`);\n      const bidData = response.data;\n      console.log('response', bidData);\n      let data = await fetchBidData(bidData);\n      console.log('data', data);\n      dispatch({\n        type: 'BID_SUCCESS',\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'ERROR'\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (!(user === null || user === void 0 ? void 0 : user.addr)) return;\n    fetchUserMintedNsfts();\n    fetchUserOwnedNsfts();\n    fetchUserOwnedIds();\n    fetchUserLiveAuctions();\n    fetchUserLiveBids(); //eslint-disable-next-line\n  }, [user]);\n\n  const fetchAccountLiveAuctions = async address => {\n    try {\n      let res = await query({\n        cadence: GET_AUCTION_IDS,\n        args: (arg, t) => [arg(address, t.Address)]\n      });\n      let data = await fetchAuctionData(address, res);\n      return data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const addToAuction = async (nftid, price) => {\n    dispatch({\n      type: 'PROCESSING'\n    });\n\n    try {\n      let res = await mutate({\n        cadence: CREATE_AUCTION,\n        args: (arg, t) => [arg(nftid, t.UInt64), arg(price, t.UFix64)],\n        limit: 500\n      });\n      let txStatus = await tx(res).onceSealed();\n      console.log(txStatus);\n      dispatch({\n        type: 'TX_SUCCESS',\n        payload: txStatus\n      });\n      return txStatus;\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: 'ERROR'\n      });\n    }\n  };\n\n  const bidOnAuction = async (nftid, address, price) => {\n    dispatch({\n      type: 'PROCESSING'\n    });\n\n    try {\n      let res = await mutate({\n        cadence: BID_ON_AUCTION,\n        args: (arg, t) => [arg(nftid, t.UInt64), arg(address, t.Address), arg(price, t.UFix64)],\n        limit: 150\n      });\n      let txStatus = await tx(res).onceSealed();\n      console.log(txStatus);\n      dispatch({\n        type: 'TX_SUCCESS',\n        payload: txStatus\n      });\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: 'ERROR'\n      });\n    }\n  };\n\n  const settleAuction = async nftid => {\n    console.log(state.error);\n    dispatch({\n      type: 'PROCESSING'\n    });\n\n    try {\n      let res = await mutate({\n        cadence: SETTLE_AUCTION,\n        args: (arg, t) => [arg(nftid, t.UInt64)],\n        limit: 500\n      });\n      let txStatus = await tx(res).onceSealed();\n      console.log(txStatus);\n      dispatch({\n        type: 'TX_SUCCESS',\n        payload: txStatus\n      });\n      return txStatus;\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: 'ERROR'\n      });\n    }\n  };\n\n  const mintNsft = async (cid, fileType, title, description, editionSize) => {\n    dispatch({\n      type: 'PROCESSING'\n    });\n\n    try {\n      let res = await mutate({\n        cadence: MINT_NSFT,\n        args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address), arg(cid, t.String), arg(fileType, t.UInt8), arg(title, t.String), arg(description, t.String), arg(editionSize, t.UInt16)],\n        limit: 500,\n        authz: authorizationFunction\n      }); //addTx(res)\n\n      let txStatus = await tx(res).onceSealed();\n      dispatch({\n        type: 'TX_SUCCESS',\n        payload: txStatus\n      });\n      return txStatus;\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: 'ERROR'\n      });\n    }\n  };\n\n  return { ...state,\n    mintNsft,\n    addToAuction,\n    settleAuction,\n    fetchAccountLiveAuctions,\n    fetchUserMintedNsfts,\n    fetchUserOwnedNsfts,\n    fetchUserOwnedIds,\n    bidOnAuction\n  };\n}\n\n_s(useUserNsfts, \"mVN2j7Uz2lx1FuliDgbhEGBy0Hg=\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft/client/src/hooks/use-user-nsfts.hook.js"],"names":["useEffect","useReducer","userNsftReducer","mutate","query","tx","MINT_NSFT","authorizationFunction","GET_TOKEN_DATA","CREATE_AUCTION","GET_AUCTION_IDS","GET_SINGLE_AUCTION_DATA","SETTLE_AUCTION","BID_ON_AUCTION","GET_OWNED_IDS","axios","api_node","process","env","NODE_ENV","REACT_APP_LOCAL_API_NODE","useUserNsfts","user","state","dispatch","loading","error","minted_data","auction_data","owned_data","owned_ids","bids_data","txStatus","runScript","address","id","console","log","cadence","args","arg","t","Address","UInt64","nftData","fetchAuctionData","data","Promise","all","map","fetchBidData","el","auctionuser","tokenid","fetchUserMintedNsfts","type","res","addr","minted_nsfts","filter","token","creatorAddress","payload","err","fetchUserOwnedIds","owned_nsfts","fetchUserOwnedNsfts","fetchUserLiveAuctions","fetchUserLiveBids","response","get","bidData","fetchAccountLiveAuctions","addToAuction","nftid","price","UFix64","limit","onceSealed","bidOnAuction","settleAuction","mintNsft","cid","fileType","title","description","editionSize","String","UInt8","UInt16","authz"],"mappings":"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","sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport { userNsftReducer } from \"../reducer/userNsftReducer\";\nimport { mutate, query, tx } from '@onflow/fcl';\nimport { MINT_NSFT } from \"../flow/mint-nsft.tx\";\nimport { authorizationFunction } from \"../services/authorization-function\";\nimport { GET_TOKEN_DATA } from \"../flow/get-token-data.script\";\nimport { CREATE_AUCTION } from \"../flow/create-auction.tx\";\nimport { GET_AUCTION_IDS } from \"../flow/get-auction-ids.script\";\nimport { GET_SINGLE_AUCTION_DATA } from \"../flow/get-single-auction-data.script\";\nimport { SETTLE_AUCTION } from \"../flow/settle-auction.tx\";\nimport { BID_ON_AUCTION } from \"../flow/bid-auction.tx\";\nimport { GET_OWNED_IDS } from \"../flow/get-owned-token-ids.script\";\nimport axios from \"axios\";\n\nlet api_node;\n\nprocess.env.NODE_ENV === \"production\"\n  ? api_node = ''\n  : api_node = process.env.REACT_APP_LOCAL_API_NODE\n\nexport default function useUserNsfts(user) {\n    const [state, dispatch] = useReducer(userNsftReducer, {\n        loading: false,\n        error: false,\n        minted_data: [],\n        auction_data: [],\n        owned_data: [],\n        owned_ids: [],\n        bids_data: [],\n        txStatus: {}\n    })\n\n    const runScript = async (address, id) => {\n        console.log('HI', address, id)\n        let auction_data = await query({\n            cadence: GET_SINGLE_AUCTION_DATA,\n            args: (arg, t) => [arg(address, t.Address), arg(id, t.UInt64)]\n        })\n        console.log(auction_data)\n        const { nftData } = auction_data\n        return {...auction_data, ...nftData}\n    }\n\n    const fetchAuctionData = async (address, data) => {\n        return Promise.all(data.map((id) => {\n            return runScript(address, id)\n        }))\n    }\n\n    const fetchBidData = async (data) => {\n        return Promise.all(data.map((el) => {\n            return runScript(el.auctionuser, el.tokenid)\n        }))\n    }\n\n    const fetchUserMintedNsfts = async () => {\n        dispatch({ type: 'PROCESSING' })\n        try {\n            let res = await query({\n                cadence: GET_TOKEN_DATA,\n                args: (arg, t) => [arg(user?.addr, t.Address)]\n            })\n            console.log(res)\n            let minted_nsfts = []\n            if (res !== null) {\n                minted_nsfts = res.filter(token => token.creatorAddress === user?.addr)\n            }\n            dispatch({ type: 'MINTED_SUCCESS', payload: minted_nsfts })\n        } catch (err) {\n            console.log(err)\n            dispatch({ type: 'ERROR' })\n        }\n    }\n\n    const fetchUserOwnedIds = async () => {\n        dispatch({ type: 'PROCESSING' })\n        try {\n            let res = await query({\n                cadence: GET_OWNED_IDS,\n                args: (arg, t) => [arg(user?.addr, t.Address)]\n            })\n            console.log(res)\n            let owned_nsfts = []\n            if (res !== null) {\n                owned_nsfts = res.filter(token => token.creatorAddress !== user?.addr)\n            }\n            dispatch({ type: 'ID_SUCCESS', payload: owned_nsfts })\n        } catch(err) {\n            console.log(err)\n            dispatch({ type: 'ERROR' })\n        }\n    }\n\n    const fetchUserOwnedNsfts = async () => {\n        dispatch({ type: 'PROCESSING' })\n        try {\n            let res = await query({\n                cadence: GET_TOKEN_DATA,\n                args: (arg, t) => [arg(user?.addr, t.Address)]\n            })\n            console.log(res)\n            let owned_nsfts = []\n            if (res !== null) {\n                owned_nsfts = res.filter(token => token.creatorAddress !== user?.addr)\n            }\n            dispatch({ type: 'OWNED_SUCCESS', payload: owned_nsfts })\n        } catch (err) {\n            console.log(err)\n            dispatch({ type: 'ERROR' })\n        }\n    }\n\n    const fetchUserLiveAuctions = async () => {\n        dispatch({ type: 'PROCESSING' })\n        try {\n            let res = await query({\n                cadence: GET_AUCTION_IDS,\n                args: (arg, t) => [arg(user?.addr, t.Address)]\n            })\n            let data = await fetchAuctionData(user?.addr, res)\n            dispatch({ type: 'AUCTION_SUCCESS', payload: data })\n        } catch(err) {\n            dispatch({ type: 'ERROR' })\n        }\n    }\n\n    const fetchUserLiveBids = async () => {\n        dispatch({ type: 'PROCESSING' })\n        try {\n            let response = await axios.get(`${api_node}/api/v1/bids/${user?.addr}`)\n            const bidData = response.data;\n            console.log('response', bidData)\n            let data = await fetchBidData(bidData)\n            console.log('data', data)\n            dispatch({ type: 'BID_SUCCESS', payload: data })\n        } catch(err) {\n            dispatch({ type: 'ERROR' })\n        }\n\n    }\n\n    useEffect(() => {\n        if(!user?.addr) return\n        fetchUserMintedNsfts()\n        fetchUserOwnedNsfts()\n        fetchUserOwnedIds()\n        fetchUserLiveAuctions()\n        fetchUserLiveBids()\n        //eslint-disable-next-line\n    }, [user])\n\n\n    const fetchAccountLiveAuctions = async (address) => {\n        try {\n            let res = await query({\n                cadence: GET_AUCTION_IDS,\n                args: (arg, t) => [arg(address, t.Address)]\n            })\n            let data = await fetchAuctionData(address, res)\n            return data\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    \n\n    \n\n    const addToAuction = async (nftid, price) => {\n        dispatch({ type: 'PROCESSING' })\n        try {\n            let res = await mutate({\n                cadence: CREATE_AUCTION,\n                args: (arg, t) => [\n                    arg(nftid, t.UInt64),\n                    arg(price, t.UFix64)\n                ],\n                limit: 500\n            })\n            let txStatus = await tx(res).onceSealed()\n            console.log(txStatus)\n            dispatch({ type: 'TX_SUCCESS', payload: txStatus })\n            return txStatus\n        } catch(err) {\n            console.log(err)\n            dispatch({ type: 'ERROR' })\n        }\n    }\n\n    const bidOnAuction = async (nftid, address, price) => {\n        dispatch({ type: 'PROCESSING' })\n        try {\n            let res = await mutate({\n                cadence: BID_ON_AUCTION,\n                args: (arg, t) => [arg(nftid, t.UInt64), arg(address, t.Address), arg(price, t.UFix64)],\n                limit: 150\n            })\n            let txStatus = await tx(res).onceSealed()\n            console.log(txStatus)\n            dispatch({ type: 'TX_SUCCESS', payload: txStatus })\n        } catch(err) {\n            console.log(err)\n            dispatch({ type: 'ERROR' })\n        }\n    }\n\n    const settleAuction = async (nftid) => {\n        console.log(state.error)\n        dispatch({ type: 'PROCESSING' })\n        try {\n            let res = await mutate({\n                cadence: SETTLE_AUCTION,\n                args: (arg, t) => [arg(nftid, t.UInt64)],\n                limit: 500\n            })\n            let txStatus = await tx(res).onceSealed()\n            console.log(txStatus)\n            dispatch({ type: 'TX_SUCCESS', payload: txStatus })\n            return txStatus\n        } catch(err) {\n            console.log(err)\n            dispatch({ type: 'ERROR' })\n        }\n    }\n\n    const mintNsft = async (cid, fileType, title, description, editionSize) => {\n        dispatch({ type: 'PROCESSING' })\n        try {\n            let res = await mutate({\n                cadence: MINT_NSFT,\n                args: (arg, t) => [\n                    arg(user?.addr, t.Address),\n                    arg(cid, t.String),\n                    arg(fileType, t.UInt8),\n                    arg(title, t.String),\n                    arg(description, t.String),\n                    arg(editionSize, t.UInt16),\n                  ],\n                  limit: 500,\n                  authz: authorizationFunction\n            })\n            //addTx(res)\n            let txStatus = await tx(res).onceSealed()\n            dispatch({ type: 'TX_SUCCESS', payload: txStatus })\n            return txStatus\n        } catch(err) {\n            console.log(err)\n            dispatch({ type: 'ERROR' })\n        }\n    }\n\n    return {\n        ...state,\n        mintNsft,\n        addToAuction,\n        settleAuction,\n        fetchAccountLiveAuctions,\n        fetchUserMintedNsfts,\n        fetchUserOwnedNsfts,\n        fetchUserOwnedIds,\n        bidOnAuction\n    }\n}"]},"metadata":{},"sourceType":"module"}