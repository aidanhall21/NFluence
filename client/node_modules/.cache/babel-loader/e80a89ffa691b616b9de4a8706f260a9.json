{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer } from \"react\";\nimport { userNsftReducer } from \"../reducer/userNsftReducer\";\nimport { mutate, query, tx } from '@onflow/fcl'; //import { useTxs } from \"../providers/TxProvider\";\n\nimport { LIST_USER_OWNED_NFTS } from \"../flow/list-user-minted-nft.script\";\nimport { MINT_NSFT } from \"../flow/mint-nsft.tx\";\nimport { authorizationFunction } from \"../services/authorization-function\";\nexport default function useUserNsfts(user, collection) {\n  _s();\n\n  const [state, dispatch] = useReducer(userNsftReducer, {\n    loading: false,\n    error: false,\n    data: []\n  }); //const { addTx } = useTxs()\n  //const { checkCollection } = useCollection()\n\n  useEffect(() => {\n    if (!(user === null || user === void 0 ? void 0 : user.addr)) return;\n\n    const fetchUserMintedNsfts = async () => {\n      dispatch({\n        type: 'PROCESSING'\n      });\n\n      try {\n        let res = await query({\n          cadence: LIST_USER_OWNED_NFTS,\n          args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address)]\n        });\n        let minted_nsfts = res.filter(token => token.creatorAddress === (user === null || user === void 0 ? void 0 : user.addr));\n        dispatch({\n          type: 'SUCCESS',\n          payload: minted_nsfts\n        });\n      } catch (err) {\n        console.log(err);\n        dispatch({\n          type: 'ERROR'\n        });\n      }\n    };\n\n    console.log('fetching!!');\n    fetchUserMintedNsfts(); //eslint-disable-next-line\n  }, []);\n\n  const mintNsft = async (cid, fileType, title, description, editionSize) => {\n    dispatch({\n      type: 'PROCESSING'\n    });\n    console.log(state.loading);\n\n    try {\n      let res = await mutate({\n        cadence: MINT_NSFT,\n        args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address), arg(cid, t.String), arg(fileType, t.UInt8), arg(title, t.String), arg(description, t.String), arg(editionSize, t.UInt16)],\n        limit: 500,\n        authz: authorizationFunction\n      }); //addTx(res)\n\n      let txStatus = await tx(res).onceSealed();\n      dispatch({\n        type: 'SUCCESS',\n        payload: txStatus\n      });\n      console.log(state.loading);\n      return txStatus;\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: 'ERROR'\n      });\n    }\n  };\n\n  return { ...state,\n    mintNsft\n  };\n}\n\n_s(useUserNsfts, \"1htARhFWJ5f/JVr2mTFL5H8EFcg=\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft-v3/client/src/hooks/use-user-nsfts.hook.js"],"names":["useEffect","useReducer","userNsftReducer","mutate","query","tx","LIST_USER_OWNED_NFTS","MINT_NSFT","authorizationFunction","useUserNsfts","user","collection","state","dispatch","loading","error","data","addr","fetchUserMintedNsfts","type","res","cadence","args","arg","t","Address","minted_nsfts","filter","token","creatorAddress","payload","err","console","log","mintNsft","cid","fileType","title","description","editionSize","String","UInt8","UInt16","limit","authz","txStatus","onceSealed"],"mappings":"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","sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport { userNsftReducer } from \"../reducer/userNsftReducer\";\nimport { mutate, query, tx } from '@onflow/fcl';\n//import { useTxs } from \"../providers/TxProvider\";\nimport { LIST_USER_OWNED_NFTS } from \"../flow/list-user-minted-nft.script\";\nimport { MINT_NSFT } from \"../flow/mint-nsft.tx\";\nimport { authorizationFunction } from \"../services/authorization-function\";\n\nexport default function useUserNsfts(user, collection) {\n    const [state, dispatch] = useReducer(userNsftReducer, {\n        loading: false,\n        error: false,\n        data: []\n    })\n\n    //const { addTx } = useTxs()\n    //const { checkCollection } = useCollection()\n\n    useEffect(() => {\n        if(!user?.addr) return\n        const fetchUserMintedNsfts = async () => {\n            dispatch({ type: 'PROCESSING' })\n            try {\n                let res = await query({\n                    cadence: LIST_USER_OWNED_NFTS,\n                    args: (arg, t) => [arg(user?.addr, t.Address)]\n                })\n                let minted_nsfts = res.filter(token => token.creatorAddress === user?.addr)\n                dispatch({ type: 'SUCCESS', payload: minted_nsfts })\n            } catch (err) {\n                console.log(err)\n                dispatch({ type: 'ERROR' })\n            }\n        }\n        console.log('fetching!!')\n        fetchUserMintedNsfts()\n        //eslint-disable-next-line\n    }, [])\n\n    const mintNsft = async (cid, fileType, title, description, editionSize) => {\n        dispatch({ type: 'PROCESSING' })\n        console.log(state.loading)\n        try {\n            let res = await mutate({\n                cadence: MINT_NSFT,\n                args: (arg, t) => [\n                    arg(user?.addr, t.Address),\n                    arg(cid, t.String),\n                    arg(fileType, t.UInt8),\n                    arg(title, t.String),\n                    arg(description, t.String),\n                    arg(editionSize, t.UInt16),\n                  ],\n                  limit: 500,\n                  authz: authorizationFunction\n            })\n            //addTx(res)\n            let txStatus = await tx(res).onceSealed()\n            dispatch({ type: 'SUCCESS', payload: txStatus })\n            console.log(state.loading)\n            return txStatus\n        } catch(err) {\n            console.log(err)\n            dispatch({ type: 'ERROR' })\n        }\n    }\n\n    return {\n        ...state,\n        mintNsft\n    }\n}"]},"metadata":{},"sourceType":"module"}