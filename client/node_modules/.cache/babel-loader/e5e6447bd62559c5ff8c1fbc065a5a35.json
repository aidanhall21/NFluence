{"ast":null,"code":"export const MINT_DAPPIES_FROM_PACK = `\nimport DappyContract from 0xDappy\nimport FungibleToken from 0xFungibleToken\nimport FUSD from 0xFUSD\n\ntransaction(familyID: UInt32, templateIDs: [UInt32], amount: UFix64) {\n  let receiverReference: &DappyContract.Collection{DappyContract.Receiver}\n  let sentVault: @FungibleToken.Vault\n\n  prepare(acct: AuthAccount) {\n    self.receiverReference = acct.borrow<&DappyContract.Collection>(from: DappyContract.CollectionStoragePath)\n        ?? panic(\"Cannot borrow\")\n    \n    let vaultRef = acct.borrow<&FUSD.Vault>(from: /storage/fusdVault)\n        ?? panic(\"Could not borrow FUSD Vault\")\n\n    self.sentVault <- vaultRef.withdraw(amount: amount)\n  }\n\n  execute {\n    let collection <- DappyContract.batchMintDappiesFromFamily(familyID: familyID, templateIDs: templateIDs, paymentVault: <-self.sentVault)\n    self.receiverReference.batchDeposit(collection: <-collection)\n  }\n}\n`;","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft-v3/src/flow/mint-dappies-from-pack.tx.js"],"names":["MINT_DAPPIES_FROM_PACK"],"mappings":"AAAA,OAAO,MAAMA,sBAAsB,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBO","sourcesContent":["export const MINT_DAPPIES_FROM_PACK = `\nimport DappyContract from 0xDappy\nimport FungibleToken from 0xFungibleToken\nimport FUSD from 0xFUSD\n\ntransaction(familyID: UInt32, templateIDs: [UInt32], amount: UFix64) {\n  let receiverReference: &DappyContract.Collection{DappyContract.Receiver}\n  let sentVault: @FungibleToken.Vault\n\n  prepare(acct: AuthAccount) {\n    self.receiverReference = acct.borrow<&DappyContract.Collection>(from: DappyContract.CollectionStoragePath)\n        ?? panic(\"Cannot borrow\")\n    \n    let vaultRef = acct.borrow<&FUSD.Vault>(from: /storage/fusdVault)\n        ?? panic(\"Could not borrow FUSD Vault\")\n\n    self.sentVault <- vaultRef.withdraw(amount: amount)\n  }\n\n  execute {\n    let collection <- DappyContract.batchMintDappiesFromFamily(familyID: familyID, templateIDs: templateIDs, paymentVault: <-self.sentVault)\n    self.receiverReference.batchDeposit(collection: <-collection)\n  }\n}\n`"]},"metadata":{},"sourceType":"module"}