{"ast":null,"code":"export const INIT_ACCOUNT = `\nimport NSFT from 0xNSFT\nimport NSFAuction from 0xNSFAUCTION\nimport UtilityCoin from 0xUTILITYCOIN\nimport FungibleToken from 0x9a0766d93b6608b7\n\ntransaction {\n  prepare(acct: AuthAccount) {\n    acct.unlink(NSFT.CollectionPublicPath)\n    let collection <- NSFT.createEmptyCollection()\n    acct.save(<- collection, to: /storage/testStorage)\n    acct.link<&NSFT.Collection{NSFT.NSFTCollectionPublic}>(NSFT.CollectionPublicPath, target: /storage/testStorage)\n\n    /* \n    acct.unlink(NSFAuction.StorefrontPublicPath)\n    let storefront <- NSFAuction.createStorefront()\n    acct.save(<-storefront, to: NSFAuction.StorefrontStoragePath)\n    acct.link<&NSFAuction.Storefront{NSFAuction.StorefrontPublic}>(NSFAuction.StorefrontPublicPath, target: NSFAuction.StorefrontStoragePath)\n\n    acct.unlink(/public/utilityCoinReceiver)\n    acct.unlink(/public/utilityCoinBalance)\n    acct.save(<- UtilityCoin.createEmptyVault(), to: /storage/utilityCoinVault)\n    acct.link<&UtilityCoin.Vault{FungibleToken.Receiver}>(/public/utilityCoinReceiver, target: /storage/utilityCoinVault)\n    acct.link<&UtilityCoin.Vault{FungibleToken.Balance}>(/public/utilityCoinBalance, target: /storage/utilityCoinVault)\n    */\n  }\n}\n`;","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft/client/src/flow/init-account.tx.js"],"names":["INIT_ACCOUNT"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BO","sourcesContent":["export const INIT_ACCOUNT = `\nimport NSFT from 0xNSFT\nimport NSFAuction from 0xNSFAUCTION\nimport UtilityCoin from 0xUTILITYCOIN\nimport FungibleToken from 0x9a0766d93b6608b7\n\ntransaction {\n  prepare(acct: AuthAccount) {\n    acct.unlink(NSFT.CollectionPublicPath)\n    let collection <- NSFT.createEmptyCollection()\n    acct.save(<- collection, to: /storage/testStorage)\n    acct.link<&NSFT.Collection{NSFT.NSFTCollectionPublic}>(NSFT.CollectionPublicPath, target: /storage/testStorage)\n\n    /* \n    acct.unlink(NSFAuction.StorefrontPublicPath)\n    let storefront <- NSFAuction.createStorefront()\n    acct.save(<-storefront, to: NSFAuction.StorefrontStoragePath)\n    acct.link<&NSFAuction.Storefront{NSFAuction.StorefrontPublic}>(NSFAuction.StorefrontPublicPath, target: NSFAuction.StorefrontStoragePath)\n\n    acct.unlink(/public/utilityCoinReceiver)\n    acct.unlink(/public/utilityCoinBalance)\n    acct.save(<- UtilityCoin.createEmptyVault(), to: /storage/utilityCoinVault)\n    acct.link<&UtilityCoin.Vault{FungibleToken.Receiver}>(/public/utilityCoinReceiver, target: /storage/utilityCoinVault)\n    acct.link<&UtilityCoin.Vault{FungibleToken.Balance}>(/public/utilityCoinBalance, target: /storage/utilityCoinVault)\n    */\n  }\n}\n`"]},"metadata":{},"sourceType":"module"}