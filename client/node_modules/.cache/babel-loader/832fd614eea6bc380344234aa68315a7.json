{"ast":null,"code":"export const CREATE_COIN_VAULT = `\nimport FungibleToken from 0x9a0766d93b6608b7\nimport UtilityCoin from 0xUTILITYCOIN\n\ntransaction {\n    prepare(signer: AuthAccount) {\n        if(signer.borrow<&UtilityCoin>(from: /storage/utilityCoinVault) != nil) {\n            return\n        }\n\n        signer.save(<- UtilityCoin.createEmptyVault(), to: /storage/utilityCoinVault)\n        signer.link<&UtilityCoin.Vault{FungibleToken.Receiver}>(/public/utilityCoinReceiver, target: /storage/utilityCoinVault)\n        signer.link<&UtilityCoin.Vault{FungibleToken.Balance}>(/public/urilityCoinBalance, target: /storage/utilityCoinVault)\n    }\n}\n`;","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft-v3/client/src/flow/create-coin-vault.tx.js"],"names":["CREATE_COIN_VAULT"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO","sourcesContent":["export const CREATE_COIN_VAULT = `\nimport FungibleToken from 0x9a0766d93b6608b7\nimport UtilityCoin from 0xUTILITYCOIN\n\ntransaction {\n    prepare(signer: AuthAccount) {\n        if(signer.borrow<&UtilityCoin>(from: /storage/utilityCoinVault) != nil) {\n            return\n        }\n\n        signer.save(<- UtilityCoin.createEmptyVault(), to: /storage/utilityCoinVault)\n        signer.link<&UtilityCoin.Vault{FungibleToken.Receiver}>(/public/utilityCoinReceiver, target: /storage/utilityCoinVault)\n        signer.link<&UtilityCoin.Vault{FungibleToken.Balance}>(/public/urilityCoinBalance, target: /storage/utilityCoinVault)\n    }\n}\n`"]},"metadata":{},"sourceType":"module"}