{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer } from \"react\";\nimport { defaultReducer } from \"../reducer/defaultReducer\";\nimport Identicon from \"identicon.js\";\nimport axios from \"axios\";\nlet api_node;\nprocess.env.NODE_ENV === \"production\" ? api_node = '' : api_node = process.env.REACT_APP_LOCAL_API_NODE;\nexport default function useProfileData(user) {\n  _s();\n\n  const [state, dispatch] = useReducer(defaultReducer, {\n    loading: false,\n    error: false,\n    data: [{\n      avatar: new Identicon(user === null || user === void 0 ? void 0 : user.addr).toString(),\n      name: 'new_user',\n      handle: user === null || user === void 0 ? void 0 : user.addr\n    }]\n  });\n  useEffect(() => {\n    const fetchUserData = async () => {\n      dispatch({\n        type: 'PROCESSING'\n      });\n\n      try {\n        const api = await axios.get(`${api_node}/api/v1/user/${user === null || user === void 0 ? void 0 : user.addr}`);\n        const serverResponse = api.data;\n\n        if (serverResponse.length > 0) {\n          dispatch({\n            type: 'SUCCESS',\n            payload: serverResponse\n          });\n        }\n      } catch (err) {\n        dispatch({\n          type: 'ERROR'\n        });\n      }\n    };\n\n    fetchUserData();\n  }, []);\n  return { ...state\n  };\n}\n\n_s(useProfileData, \"QL+zQgBURXYHx8l1lIa3ChGbBoA=\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft-v3/client/src/hooks/use-profile-data.hook.js"],"names":["useEffect","useReducer","defaultReducer","Identicon","axios","api_node","process","env","NODE_ENV","REACT_APP_LOCAL_API_NODE","useProfileData","user","state","dispatch","loading","error","data","avatar","addr","toString","name","handle","fetchUserData","type","api","get","serverResponse","length","payload","err"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,QAAJ;AACAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACIH,QAAQ,GAAG,EADf,GAEIA,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYE,wBAF3B;AAIA,eAAe,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACC,cAAD,EAAiB;AACjDY,IAAAA,OAAO,EAAE,KADwC;AAEjDC,IAAAA,KAAK,EAAE,KAF0C;AAGjDC,IAAAA,IAAI,EAAE,CAAC;AACLC,MAAAA,MAAM,EAAE,IAAId,SAAJ,CAAcQ,IAAd,aAAcA,IAAd,uBAAcA,IAAI,CAAEO,IAApB,EAA0BC,QAA1B,EADH;AAELC,MAAAA,IAAI,EAAE,UAFD;AAGLC,MAAAA,MAAM,EAAEV,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEO;AAHT,KAAD;AAH2C,GAAjB,CAApC;AAUElB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,aAAa,GAAG,YAAY;AAChCT,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;;AACA,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAW,GAAEpB,QAAS,gBAAeM,IAA3B,aAA2BA,IAA3B,uBAA2BA,IAAI,CAAEO,IAAK,EAAhD,CAAlB;AACA,cAAMQ,cAAc,GAAGF,GAAG,CAACR,IAA3B;;AACA,YAAIU,cAAc,CAACC,MAAf,GAAwB,CAA5B,EAA+B;AAC7Bd,UAAAA,QAAQ,CAAC;AAAEU,YAAAA,IAAI,EAAE,SAAR;AAAmBK,YAAAA,OAAO,EAAEF;AAA5B,WAAD,CAAR;AACD;AACF,OAND,CAME,OAAMG,GAAN,EAAW;AACXhB,QAAAA,QAAQ,CAAC;AAAEU,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACD;AACF,KAXD;;AAYAD,IAAAA,aAAa;AACd,GAdQ,EAcN,EAdM,CAAT;AAgBF,SAAO,EACH,GAAGV;AADA,GAAP;AAGH;;GA9BuBF,c","sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport { defaultReducer } from \"../reducer/defaultReducer\";\nimport Identicon from \"identicon.js\";\nimport axios from \"axios\";\n\nlet api_node;\nprocess.env.NODE_ENV === \"production\"\n  ? api_node = ''\n  : api_node = process.env.REACT_APP_LOCAL_API_NODE\n\nexport default function useProfileData(user) {\n    const [state, dispatch] = useReducer(defaultReducer, {\n        loading: false,\n        error: false,\n        data: [{\n          avatar: new Identicon(user?.addr).toString(),\n          name: 'new_user',\n          handle: user?.addr,\n        }]\n      })\n\n      useEffect(() => {\n        const fetchUserData = async () => {\n          dispatch({ type: 'PROCESSING' })\n          try {\n            const api = await axios.get(`${api_node}/api/v1/user/${user?.addr}`)\n            const serverResponse = api.data;\n            if (serverResponse.length > 0) {\n              dispatch({ type: 'SUCCESS', payload: serverResponse })\n            }\n          } catch(err) {\n            dispatch({ type: 'ERROR' })\n          }\n        }\n        fetchUserData()\n      }, [])\n\n    return {\n        ...state,\n    }\n}"]},"metadata":{},"sourceType":"module"}