{"ast":null,"code":"var _jsxFileName = \"/Users/aidanhall/Desktop/nsft/client/src/screens/UploadDetails/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./UploadDetails.module.sass\";\nimport Icon from \"../../components/Icon\";\nimport TextInput from \"../../components/TextInput\"; //import Switch from \"../../components/Switch\";\n\nimport Modal from \"../../components/Modal\";\nimport Preview from \"./Preview\";\nimport FolowSteps from \"./FolowSteps\";\nimport { NFTStorage } from \"nft.storage\";\nimport CryptoJs from 'crypto-js';\nimport { useUser } from \"../../providers/UserProvider\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\"; //const royaltiesOptions = [\"10%\", \"20%\", \"30%\"];\n\n/*\nconst items = [\n  {\n    title: \"Create collection\",\n    color: \"#4BC9F0\",\n  },\n  {\n    title: \"Crypto Legend - Professor\",\n    color: \"#45B26B\",\n  },\n  {\n    title: \"Crypto Legend - Professor\",\n    color: \"#EF466F\",\n  },\n  {\n    title: \"Legend Photography\",\n    color: \"#9757D7\",\n  },\n];\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apikey = process.env.REACT_APP_NFT_STORAGE_KEY;\n\nconst encrypt = text => {\n  return CryptoJs.enc.Base64.stringify(CryptoJs.enc.Utf8.parse(text));\n};\n\nconst Upload = () => {\n  _s();\n\n  //const [royalties, setRoyalties] = useState(royaltiesOptions[0]);\n  //const [sale, setSale] = useState(true);\n  //const [price, setPrice] = useState(false);\n  //const [locking, setLocking] = useState(false);\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [visiblePreview, setVisiblePreview] = useState(false);\n  const [name, setName] = useState('');\n  const [desc, setDesc] = useState('');\n  const [count, setCount] = useState(1);\n  const [preview, setPreview] = useState();\n  const [previewType, setPreviewType] = useState('');\n  const [file, setFile] = useState();\n  const [success, setSuccess] = useState(false);\n  const [verified, setVerified] = useState(false);\n  const [fileCheck, setFileCheck] = useState(false);\n  const {\n    mintNsft,\n    collection,\n    loading,\n    error\n  } = useUser();\n  const location = useLocation();\n  const history = useHistory();\n  const client = new NFTStorage({\n    token: apikey\n  });\n\n  const handleNameChange = async e => {\n    setName(e);\n  };\n\n  const handleDescriptionChange = async e => {\n    setDesc(e);\n  };\n\n  const handleCountChange = async e => {\n    setCount(e);\n  };\n\n  const handleFileInput = async e => {\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n    setPreviewType(e.target.files[0].type.split('/')[0]);\n  }; // Test videos\n\n\n  const handleSubmit = async e => {\n    if (!collection) {\n      setVerified(true);\n      return;\n    }\n\n    if (!file) {\n      setFileCheck(true);\n      return;\n    }\n\n    setVisibleModal(true); //const files = e.nativeEvent[\"target\"][\"form\"][0].files[0]\n\n    const filetype = file[\"type\"].split(\"/\")[0];\n    let type;\n\n    if (filetype === 'image') {\n      type = 0;\n    } else if (filetype === 'video') {\n      type = 1;\n    } else {\n      type = 2;\n    }\n\n    const metadata = await client.store({\n      name: name,\n      description: desc,\n      image: file\n    });\n    let hash = metadata.url;\n    hash = encrypt(metadata.url); //eslint-disable-next-line\n\n    const tx = await mintNsft(hash, type, name, desc, count).then(response => {\n      setSuccess(true);\n      console.log(response);\n    }).catch(err => {\n      setSuccess(false);\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(\"section\", styles.section),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"container\", styles.container),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.wrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.head,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: cn(\"h2\", styles.title),\n              children: location.pathname.split(\"/\")[1] === 'upload-single' ? 'Create single collectible' : 'Create multiple collectibles'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: styles.button,\n              to: location.pathname.split(\"/\")[1] === 'upload-single' ? '/upload-multiple' : '/upload-single',\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: cn(\"button-stroke button-small\", styles.button),\n                children: location.pathname.split(\"/\")[1] === 'upload-single' ? 'Switch to Multiple' : 'Switch to Single'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: styles.form,\n            action: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.list,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.item,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.category,\n                  children: \"Upload file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.note,\n                  children: \"Drag or choose your file to upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.file,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: styles.load,\n                    type: \"file\",\n                    accept: \"image/*,video/*\",\n                    onChange: handleFileInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.icon,\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"upload-file\",\n                      size: \"24\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.format,\n                    children: \"Image and Video files accepted. Max 32Gb.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.item,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.category,\n                  children: \"NSFT Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.fieldset,\n                  children: [/*#__PURE__*/_jsxDEV(TextInput, {\n                    className: styles.field,\n                    label: \"Title\",\n                    name: \"NSFT\",\n                    type: \"text\",\n                    required: true,\n                    onChange: e => handleNameChange(e.currentTarget.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n                    className: styles.field,\n                    label: \"Description\",\n                    name: \"Description\",\n                    type: \"text\",\n                    placeholder: \"\",\n                    required: true,\n                    onChange: e => handleDescriptionChange(e.currentTarget.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 21\n                  }, this), location.pathname.split(\"/\")[1] === 'upload-multiple' && /*#__PURE__*/_jsxDEV(TextInput, {\n                    className: styles.field,\n                    label: \"Count\",\n                    name: \"Count\",\n                    type: \"number\",\n                    placeholder: \"\",\n                    step: 1,\n                    min: 1,\n                    max: 10,\n                    required: true,\n                    onChange: e => handleCountChange(e.currentTarget.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.foot,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: cn(\"button-stroke tablet-show\", styles.button),\n                onClick: () => setVisiblePreview(true),\n                type: \"button\",\n                children: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: cn(\"button\", styles.button),\n                onClick: e => {\n                  handleSubmit(e);\n                } // type=\"button\" hide after form customization\n                ,\n                type: \"button\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Create item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"arrow-next\",\n                  size: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), verified && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"You must verify your account before you can mint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 31\n              }, this), fileCheck && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Please upload content before continuing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Preview, {\n          className: cn(styles.preview, {\n            [styles.active]: visiblePreview\n          }),\n          onClose: () => setVisiblePreview(false),\n          obj: {\n            file: preview,\n            type: previewType,\n            name: name,\n            desc: desc,\n            count: count\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visibleModal,\n      onClose: () => setVisibleModal(false),\n      children: /*#__PURE__*/_jsxDEV(FolowSteps, {\n        className: styles.steps,\n        obj: {\n          loading: loading,\n          error: error,\n          success: success\n        },\n        onClose: () => setVisibleModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Upload, \"DcdZWsNh0bhaPicyAwdFwchg+Jg=\", false, function () {\n  return [useUser, useLocation, useHistory];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft/client/src/screens/UploadDetails/index.js"],"names":["React","useState","cn","styles","Icon","TextInput","Modal","Preview","FolowSteps","NFTStorage","CryptoJs","useUser","useHistory","useLocation","Link","apikey","process","env","REACT_APP_NFT_STORAGE_KEY","encrypt","text","enc","Base64","stringify","Utf8","parse","Upload","visibleModal","setVisibleModal","visiblePreview","setVisiblePreview","name","setName","desc","setDesc","count","setCount","preview","setPreview","previewType","setPreviewType","file","setFile","success","setSuccess","verified","setVerified","fileCheck","setFileCheck","mintNsft","collection","loading","error","location","history","client","token","handleNameChange","e","handleDescriptionChange","handleCountChange","handleFileInput","URL","createObjectURL","target","files","type","split","handleSubmit","filetype","metadata","store","description","image","hash","url","tx","then","response","console","log","catch","err","section","container","wrapper","head","title","pathname","button","form","list","item","category","note","load","icon","format","fieldset","field","currentTarget","value","foot","active","steps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./UploadDetails.module.sass\";\nimport Icon from \"../../components/Icon\";\nimport TextInput from \"../../components/TextInput\";\n//import Switch from \"../../components/Switch\";\nimport Modal from \"../../components/Modal\";\nimport Preview from \"./Preview\";\nimport FolowSteps from \"./FolowSteps\";\nimport { NFTStorage } from \"nft.storage\"\nimport CryptoJs from 'crypto-js'\nimport { useUser } from \"../../providers/UserProvider\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\n//const royaltiesOptions = [\"10%\", \"20%\", \"30%\"];\n/*\nconst items = [\n  {\n    title: \"Create collection\",\n    color: \"#4BC9F0\",\n  },\n  {\n    title: \"Crypto Legend - Professor\",\n    color: \"#45B26B\",\n  },\n  {\n    title: \"Crypto Legend - Professor\",\n    color: \"#EF466F\",\n  },\n  {\n    title: \"Legend Photography\",\n    color: \"#9757D7\",\n  },\n];\n*/\n\nconst apikey = process.env.REACT_APP_NFT_STORAGE_KEY\n\nconst encrypt = (text) => {\n  return CryptoJs.enc.Base64.stringify(CryptoJs.enc.Utf8.parse(text))\n}\n\nconst Upload = () => {\n  //const [royalties, setRoyalties] = useState(royaltiesOptions[0]);\n  //const [sale, setSale] = useState(true);\n  //const [price, setPrice] = useState(false);\n  //const [locking, setLocking] = useState(false);\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [visiblePreview, setVisiblePreview] = useState(false);\n  const [name, setName] = useState('')\n  const [desc, setDesc] = useState('')\n  const [count, setCount] = useState(1)\n  const [preview, setPreview] = useState()\n  const [previewType, setPreviewType] = useState('')\n  const [file, setFile] = useState()\n  const [success, setSuccess] = useState(false)\n  const [verified, setVerified] = useState(false)\n  const [fileCheck, setFileCheck] = useState(false)\n\n  const { mintNsft, collection, loading, error } = useUser()\n\n  const location = useLocation()\n  const history = useHistory()\n\n  const client = new NFTStorage({ token: apikey })\n\n  const handleNameChange = async (e) => {\n    setName(e)\n  }\n\n  const handleDescriptionChange = async (e) => {\n    setDesc(e)\n  }\n\n  const handleCountChange = async (e) => {\n    setCount(e)\n  }\n\n  const handleFileInput = async (e) => {\n    setPreview(URL.createObjectURL(e.target.files[0]))\n    setFile(e.target.files[0])\n    setPreviewType(e.target.files[0].type.split('/')[0])\n  }\n\n  // Test videos\n\n  const handleSubmit = async (e) => {\n    if (!collection) {\n      setVerified(true)\n      return\n    }\n\n    if (!file) {\n      setFileCheck(true)\n      return\n    }\n\n    setVisibleModal(true)\n\n    //const files = e.nativeEvent[\"target\"][\"form\"][0].files[0]\n    const filetype = file[\"type\"].split(\"/\")[0]\n    let type;\n    if (filetype === 'image') {\n      type = 0\n    } else if (filetype === 'video') {\n      type = 1\n    } else {\n      type = 2\n    }\n\n    const metadata = await client.store({\n      name: name,\n      description: desc,\n      image: file\n    })\n\n    let hash = metadata.url\n    hash = encrypt(metadata.url)\n\n    //eslint-disable-next-line\n    const tx = await mintNsft(hash, type, name, desc, count)\n    .then((response) => {\n      setSuccess(true)\n      console.log(response)\n    })\n    .catch((err) => {\n      setSuccess(false)\n      console.log(err)\n    })\n    \n  }\n\n  return (\n    <>\n      <div className={cn(\"section\", styles.section)}>\n        <div className={cn(\"container\", styles.container)}>\n          <div className={styles.wrapper}>\n            <div className={styles.head}>\n              <div className={cn(\"h2\", styles.title)}>\n                {location.pathname.split(\"/\")[1] === 'upload-single' ? 'Create single collectible' : 'Create multiple collectibles'}\n              </div>\n              <Link\n                className={styles.button}\n                to={location.pathname.split(\"/\")[1] === 'upload-single' ? '/upload-multiple' : '/upload-single'}\n              >\n              <button\n                className={cn(\"button-stroke button-small\", styles.button)}\n              >\n                {location.pathname.split(\"/\")[1] === 'upload-single' ? 'Switch to Multiple' : 'Switch to Single'}\n              </button>\n              </Link>\n            </div>\n            <form className={styles.form} action=\"\">\n              <div className={styles.list}>\n                <div className={styles.item}>\n                  <div className={styles.category}>Upload file</div>\n                  <div className={styles.note}>\n                    Drag or choose your file to upload\n                  </div>\n                  <div className={styles.file}>\n                    <input className={styles.load} type=\"file\" accept=\"image/*,video/*\" onChange={handleFileInput} />\n                    <div className={styles.icon}>\n                      <Icon name=\"upload-file\" size=\"24\" />\n                    </div>\n                    <div className={styles.format}>\n                      Image and Video files accepted. Max 32Gb.\n                    </div>\n                  </div>\n                </div>\n                <div className={styles.item}>\n                  <div className={styles.category}>NSFT Details</div>\n                  <div className={styles.fieldset}>\n                    <TextInput\n                      className={styles.field}\n                      label=\"Title\"\n                      name=\"NSFT\"\n                      type=\"text\"\n                      required\n                      onChange={(e) => handleNameChange(e.currentTarget.value)}\n                    />\n                    <TextInput\n                      className={styles.field}\n                      label=\"Description\"\n                      name=\"Description\"\n                      type=\"text\"\n                      placeholder=\"\"\n                      required\n                      onChange={(e) => handleDescriptionChange(e.currentTarget.value)}\n                    />\n                    {location.pathname.split(\"/\")[1] === 'upload-multiple' && (\n                      <TextInput\n                      className={styles.field}\n                      label=\"Count\"\n                      name=\"Count\"\n                      type=\"number\"\n                      placeholder=\"\"\n                      step={1}\n                      min={1}\n                      max={10}\n                      required\n                      onChange={(e) => handleCountChange(e.currentTarget.value)}\n                    />\n                    )}\n                    \n                  </div>\n                </div>\n              </div>\n              {/*<div className={styles.options}>\n                <div className={styles.option}>\n                  <div className={styles.box}>\n                    <div className={styles.category}>Put up for auction</div>\n                    <div className={styles.text}>\n                      This item will be up for auction and you'll be able to receive bids immediately.\n                    </div>\n                  </div>\n                  <Switch value={sale} setValue={setSale} />\n                </div>\n                <div className={styles.option}>\n                  <div className={styles.box}>\n                    <div className={styles.category}>Unlock once purchased</div>\n                    <div className={styles.text}>\n                      If checked then the content of your item will only be viewable after a successful sale.\n                    </div>\n                  </div>\n                  <Switch value={locking} setValue={setLocking} />\n                </div>\n                </div>*/}\n              <div className={styles.foot}>\n                <button\n                  className={cn(\"button-stroke tablet-show\", styles.button)}\n                  onClick={() => setVisiblePreview(true)}\n                  type=\"button\"\n                >\n                  Preview\n                </button>\n                <button\n                  className={cn(\"button\", styles.button)}\n                  onClick={(e) => {\n                    handleSubmit(e)\n                  }}\n                  // type=\"button\" hide after form customization\n                  type=\"button\"\n                >\n                  <span>Create item</span>\n                  <Icon name=\"arrow-next\" size=\"10\" />\n                </button>\n                {verified && (<div>You must verify your account before you can mint</div>)}\n                {fileCheck && (<div>Please upload content before continuing</div>)  }\n              </div>\n            </form>\n          </div>\n          <Preview\n            className={cn(styles.preview, { [styles.active]: visiblePreview })}\n            onClose={() => setVisiblePreview(false)}\n            obj={{\n              file: preview,\n              type: previewType,\n              name: name,\n              desc: desc,\n              count: count\n            }}\n          />\n        </div>\n      </div>\n      <Modal visible={visibleModal} onClose={() => setVisibleModal(false)}>\n        <FolowSteps className={styles.steps} obj={{ loading: loading, error: error, success: success }} onClose={() => setVisibleModal(false)} />\n      </Modal>\n    </>\n  );\n};\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}