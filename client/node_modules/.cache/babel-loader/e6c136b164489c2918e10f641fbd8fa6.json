{"ast":null,"code":"var _jsxFileName = \"/Users/aidanhall/Desktop/nsft/client/src/components/Card/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport cn from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Card.module.sass\";\nimport Icon from \"../Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction makeGatewayURL(ipfsURI) {\n  return ipfsURI.replace(/^ipfs:\\/\\//, \"https://dweb.link/ipfs/\");\n}\n\nasync function fetchIPFSJSON(ipfsURI) {\n  const url = makeGatewayURL(ipfsURI);\n  const resp = await fetch(url);\n  return resp.json();\n}\n\nconst Card = ({\n  className,\n  item\n}) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [metadata, setMetadata] = useState({});\n  useEffect(() => {\n    const createTokenLink = async () => {\n      if (item.cid === \"\") return {};\n      const renderedFile = await fetchIPFSJSON(item.cid);\n\n      if (renderedFile.image) {\n        renderedFile.image = makeGatewayURL(renderedFile.image);\n      }\n\n      return renderedFile;\n    };\n\n    const fetchData = async () => {\n      const res = await createTokenLink();\n      setMetadata(res);\n    };\n\n    fetchData();\n  }, [item.cid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(styles.card, className),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.preview,\n      children: [item.fileType === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: metadata.image,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: metadata.image,\n          alt: \"Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: cn(\"button-small\", styles.button),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Start Auction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"scatter-up\",\n            size: \"16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: styles.link,\n      to: {\n        pathname: `/item/${item.creatorAddress}/${item.nftId}`,\n        state: {\n          item: item,\n          metadata: metadata\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.body,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.line,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.title,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.line,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.users,\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.counter,\n            children: [\"/\", item.editionSize]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"nl2LncHEDbhD9M767G+/ZrK6gY4=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft/client/src/components/Card/index.js"],"names":["React","useEffect","useState","cn","Link","styles","Icon","makeGatewayURL","ipfsURI","replace","fetchIPFSJSON","url","resp","fetch","json","Card","className","item","visible","setVisible","metadata","setMetadata","createTokenLink","cid","renderedFile","image","fetchData","res","card","preview","fileType","control","button","link","pathname","creatorAddress","nftId","state","body","line","title","users","description","counter","editionSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport cn from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Card.module.sass\";\nimport Icon from \"../Icon\";\n\nfunction makeGatewayURL(ipfsURI) {\n  return ipfsURI.replace(/^ipfs:\\/\\//, \"https://dweb.link/ipfs/\");\n}\n\nasync function fetchIPFSJSON(ipfsURI) {\n  const url = makeGatewayURL(ipfsURI);\n  const resp = await fetch(url);\n  return resp.json();\n}\n\nconst Card = ({ className, item }) => {\n  const [visible, setVisible] = useState(false);\n  const [metadata, setMetadata] = useState({});\n\n  useEffect(() => {\n    const createTokenLink = async () => {\n      if (item.cid === \"\") return {};\n      const renderedFile = await fetchIPFSJSON(item.cid);\n      if (renderedFile.image) {\n        renderedFile.image = makeGatewayURL(renderedFile.image);\n      }\n      return renderedFile;\n    };\n    const fetchData = async () => {\n      const res = await createTokenLink();\n      setMetadata(res)\n    }\n    fetchData()\n  }, [item.cid]);\n\n  return (\n    <div className={cn(styles.card, className)}>\n      <div className={styles.preview}>\n        {item.fileType === 1 ? (\n          <>\n            <video controls>\n              <source src={metadata.image} type=\"video/mp4\" />\n            </video>\n          </>\n        ) : (\n          <>\n            <img src={metadata.image} alt=\"Card\" />\n          </>\n        )}\n        <div className={styles.control}>\n          {/*<div\n            className={cn(\n              { \"status-green\": item.category === \"green\" },\n              styles.category\n            )}\n          >\n            {item.categoryText}\n          </div>\n          <button\n            className={cn(styles.favorite, { [styles.active]: visible })}\n            onClick={() => setVisible(!visible)}\n          >\n            <Icon name=\"heart\" size=\"20\" />\n            </button>*/}\n          <button className={cn(\"button-small\", styles.button)}>\n            <span>Start Auction</span>\n            <Icon name=\"scatter-up\" size=\"16\" />\n          </button>\n        </div>\n      </div>\n      <Link className={styles.link} to={{\n        pathname: `/item/${item.creatorAddress}/${item.nftId}`,\n        state: {\n          item: item,\n          metadata: metadata\n        }\n      }}>\n        <div className={styles.body}>\n          <div className={styles.line}>\n            <div className={styles.title}>{item.title}</div>\n            {/*<div className={styles.price}>{item.price}</div>*/}\n          </div>\n          <div className={styles.line}>\n          <div className={styles.users}>\n              {item.description}\n            </div>\n            <div className={styles.counter}>/{item.editionSize}</div>\n          </div>\n        </div>\n        {/*<div className={styles.foot}>\n          <div className={styles.status}>\n            <Icon name=\"candlesticks-up\" size=\"20\" />\n            Highest bid <span>{item.highestBid}</span>\n          </div>\n          <div\n            className={styles.bid}\n            dangerouslySetInnerHTML={{ __html: item.bid }}\n          />\n          </div>*/}\n      </Link>\n    </div>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}