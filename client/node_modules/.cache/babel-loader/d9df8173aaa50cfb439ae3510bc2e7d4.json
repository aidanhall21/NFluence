{"ast":null,"code":"var _jsxFileName = \"/Users/aidanhall/Desktop/nsft-v3/src/providers/TxProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { decode, getTransactionStatus, send, tx } from \"@onflow/fcl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst txContext = /*#__PURE__*/React.createContext();\nexport default function TxProvider({\n  children\n}) {\n  _s();\n\n  const [txs, setTxs] = useState([]); //eslint-disable-next-line\n\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getLocalTxs(); //eslint-disable-next-line\n  }, []);\n\n  const getLocalTxs = async () => {\n    const txString = window.localStorage.getItem(\"txs\");\n\n    if (!txString || txString.length === 0) {\n      setLoading(false);\n      return;\n    }\n\n    const localTxs = txString === null || txString === void 0 ? void 0 : txString.split(\",\");\n    let runningTxs = [];\n\n    for (let index = 0; index < localTxs.length; index++) {\n      const id = localTxs[index];\n      const t = await getTxStatus(id);\n\n      if ((t === null || t === void 0 ? void 0 : t.status) === 4) {\n        continue;\n      }\n\n      tx(id).subscribe(s => updateTxStatus(s === null || s === void 0 ? void 0 : s.status, id));\n      runningTxs.push(id);\n    }\n\n    localStorage.setItems(\"txs\", runningTxs.toString());\n    setTxs(runningTxs.map(t => ({\n      id: t\n    })));\n    setLoading(false);\n  };\n\n  const addTx = txID => {\n    let transaction = {\n      id: txID\n    };\n    setTxs(prev => [...prev, transaction]);\n    tx(txID).subscribe(s => updateTxStatus(s === null || s === void 0 ? void 0 : s.status, transaction === null || transaction === void 0 ? void 0 : transaction.id));\n    window.localStorage.setItem(\"txs\", [...txs, transaction === null || transaction === void 0 ? void 0 : transaction.id].toString());\n  };\n\n  const updateTxStatus = (status, txID) => {\n    if (status === 4) {\n      removeTx(txID);\n      return;\n    }\n\n    let tx = txs.find(t => t.id === txID);\n    let oldTxs = txs.filter(t => t.id !== txID);\n    if (!tx) return;\n    let updatedTxs = { ...tx,\n      status\n    };\n    setTxs([...oldTxs, updatedTxs]);\n  };\n\n  const removeTx = txID => {\n    let newTxs = txs.filter(t => t.id !== txID);\n    setTxs(newTxs);\n  };\n\n  const getTxStatus = async txID => {\n    const status = await send([getTransactionStatus(txID)]).then(decode);\n    return status;\n  };\n\n  return /*#__PURE__*/_jsxDEV(txContext.Provider, {\n    value: {\n      runningTxs: txs.length !== 0,\n      addTx\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TxProvider, \"/6nl1jwARyzT5sCyjf7N5Yxf86w=\");\n\n_c = TxProvider;\nexport function useTxs() {\n  _s2();\n\n  return useContext(txContext);\n}\n\n_s2(useTxs, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TxProvider\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft-v3/src/providers/TxProvider.js"],"names":["React","useContext","useEffect","useState","decode","getTransactionStatus","send","tx","txContext","createContext","TxProvider","children","txs","setTxs","loading","setLoading","getLocalTxs","txString","window","localStorage","getItem","length","localTxs","split","runningTxs","index","id","t","getTxStatus","status","subscribe","s","updateTxStatus","push","setItems","toString","map","addTx","txID","transaction","prev","setItem","removeTx","find","oldTxs","filter","updatedTxs","newTxs","then","useTxs"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA,SAASC,MAAT,EAAiBC,oBAAjB,EAAuCC,IAAvC,EAA6CC,EAA7C,QAAuD,aAAvD;;AAEA,MAAMC,SAAS,gBAAGR,KAAK,CAACS,aAAN,EAAlB;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAkC;AAAA;;AAC/C,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA9B,CAD+C,CAE/C;;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,WAAW,GADG,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,WAAW,GAAG,YAAY;AAC9B,UAAMC,QAAQ,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,KAA5B,CAAjB;;AAEA,QAAI,CAACH,QAAD,IAAaA,QAAQ,CAACI,MAAT,KAAoB,CAArC,EAAwC;AACtCN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AAED,UAAMO,QAAQ,GAAGL,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEM,KAAV,CAAgB,GAAhB,CAAjB;AACA,QAAIC,UAAU,GAAG,EAAjB;;AAEA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,QAAQ,CAACD,MAArC,EAA6CI,KAAK,EAAlD,EAAsD;AACpD,YAAMC,EAAE,GAAGJ,QAAQ,CAACG,KAAD,CAAnB;AACA,YAAME,CAAC,GAAG,MAAMC,WAAW,CAACF,EAAD,CAA3B;;AACA,UAAI,CAAAC,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEE,MAAH,MAAc,CAAlB,EAAqB;AACnB;AACD;;AACDtB,MAAAA,EAAE,CAACmB,EAAD,CAAF,CAAOI,SAAP,CAAkBC,CAAD,IAAOC,cAAc,CAACD,CAAD,aAACA,CAAD,uBAACA,CAAC,CAAEF,MAAJ,EAAYH,EAAZ,CAAtC;AACAF,MAAAA,UAAU,CAACS,IAAX,CAAgBP,EAAhB;AACD;;AAEDP,IAAAA,YAAY,CAACe,QAAb,CAAsB,KAAtB,EAA6BV,UAAU,CAACW,QAAX,EAA7B;AACAtB,IAAAA,MAAM,CAACW,UAAU,CAACY,GAAX,CAAgBT,CAAD,KAAQ;AAAED,MAAAA,EAAE,EAAEC;AAAN,KAAR,CAAf,CAAD,CAAN;AACAZ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAxBD;;AA0BA,QAAMsB,KAAK,GAAIC,IAAD,IAAU;AACtB,QAAIC,WAAW,GAAG;AAAEb,MAAAA,EAAE,EAAEY;AAAN,KAAlB;AACAzB,IAAAA,MAAM,CAAE2B,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUD,WAAV,CAAX,CAAN;AACAhC,IAAAA,EAAE,CAAC+B,IAAD,CAAF,CAASR,SAAT,CAAoBC,CAAD,IAAOC,cAAc,CAACD,CAAD,aAACA,CAAD,uBAACA,CAAC,CAAEF,MAAJ,EAAYU,WAAZ,aAAYA,WAAZ,uBAAYA,WAAW,CAAEb,EAAzB,CAAxC;AACAR,IAAAA,MAAM,CAACC,YAAP,CAAoBsB,OAApB,CAA4B,KAA5B,EAAmC,CAAC,GAAG7B,GAAJ,EAAS2B,WAAT,aAASA,WAAT,uBAASA,WAAW,CAAEb,EAAtB,EAA0BS,QAA1B,EAAnC;AACD,GALD;;AAOA,QAAMH,cAAc,GAAG,CAACH,MAAD,EAASS,IAAT,KAAkB;AACvC,QAAIT,MAAM,KAAK,CAAf,EAAkB;AAChBa,MAAAA,QAAQ,CAACJ,IAAD,CAAR;AACA;AACD;;AACD,QAAI/B,EAAE,GAAGK,GAAG,CAAC+B,IAAJ,CAAUhB,CAAD,IAAOA,CAAC,CAACD,EAAF,KAASY,IAAzB,CAAT;AACA,QAAIM,MAAM,GAAGhC,GAAG,CAACiC,MAAJ,CAAYlB,CAAD,IAAOA,CAAC,CAACD,EAAF,KAASY,IAA3B,CAAb;AACA,QAAI,CAAC/B,EAAL,EAAS;AACT,QAAIuC,UAAU,GAAG,EAAE,GAAGvC,EAAL;AAASsB,MAAAA;AAAT,KAAjB;AACAhB,IAAAA,MAAM,CAAC,CAAC,GAAG+B,MAAJ,EAAYE,UAAZ,CAAD,CAAN;AACD,GAVD;;AAYA,QAAMJ,QAAQ,GAAIJ,IAAD,IAAU;AACzB,QAAIS,MAAM,GAAGnC,GAAG,CAACiC,MAAJ,CAAYlB,CAAD,IAAOA,CAAC,CAACD,EAAF,KAASY,IAA3B,CAAb;AACAzB,IAAAA,MAAM,CAACkC,MAAD,CAAN;AACD,GAHD;;AAKA,QAAMnB,WAAW,GAAG,MAAOU,IAAP,IAAgB;AAClC,UAAMT,MAAM,GAAG,MAAMvB,IAAI,CAAC,CAACD,oBAAoB,CAACiC,IAAD,CAArB,CAAD,CAAJ,CAAmCU,IAAnC,CAAwC5C,MAAxC,CAArB;AACA,WAAOyB,MAAP;AACD,GAHD;;AAKA,sBACI,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AACvBL,MAAAA,UAAU,EAAEZ,GAAG,CAACS,MAAJ,KAAe,CADJ;AAEvBgB,MAAAA;AAFuB,KAA3B;AAAA,cAIK1B;AAJL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD;;GAzEuBD,U;;KAAAA,U;AA2ExB,OAAO,SAASuC,MAAT,GAAkB;AAAA;;AACrB,SAAOhD,UAAU,CAACO,SAAD,CAAjB;AACH;;IAFeyC,M","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\n\nimport { decode, getTransactionStatus, send, tx } from \"@onflow/fcl\";\n\nconst txContext = React.createContext();\n\nexport default function TxProvider({ children }) {\n  const [txs, setTxs] = useState([]);\n  //eslint-disable-next-line\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getLocalTxs();\n    //eslint-disable-next-line\n  }, []);\n\n  const getLocalTxs = async () => {\n    const txString = window.localStorage.getItem(\"txs\");\n\n    if (!txString || txString.length === 0) {\n      setLoading(false);\n      return;\n    }\n\n    const localTxs = txString?.split(\",\");\n    let runningTxs = [];\n\n    for (let index = 0; index < localTxs.length; index++) {\n      const id = localTxs[index];\n      const t = await getTxStatus(id);\n      if (t?.status === 4) {\n        continue;\n      }\n      tx(id).subscribe((s) => updateTxStatus(s?.status, id));\n      runningTxs.push(id);\n    }\n\n    localStorage.setItems(\"txs\", runningTxs.toString());\n    setTxs(runningTxs.map((t) => ({ id: t })));\n    setLoading(false);\n  };\n\n  const addTx = (txID) => {\n    let transaction = { id: txID };\n    setTxs((prev) => [...prev, transaction]);\n    tx(txID).subscribe((s) => updateTxStatus(s?.status, transaction?.id));\n    window.localStorage.setItem(\"txs\", [...txs, transaction?.id].toString());\n  };\n\n  const updateTxStatus = (status, txID) => {\n    if (status === 4) {\n      removeTx(txID);\n      return;\n    }\n    let tx = txs.find((t) => t.id === txID);\n    let oldTxs = txs.filter((t) => t.id !== txID);\n    if (!tx) return;\n    let updatedTxs = { ...tx, status };\n    setTxs([...oldTxs, updatedTxs]);\n  };\n\n  const removeTx = (txID) => {\n    let newTxs = txs.filter((t) => t.id !== txID);\n    setTxs(newTxs);\n  };\n\n  const getTxStatus = async (txID) => {\n    const status = await send([getTransactionStatus(txID)]).then(decode);\n    return status;\n  };\n\n  return (\n      <txContext.Provider value={{\n          runningTxs: txs.length !== 0,\n          addTx,\n      }}>\n          {children}\n      </txContext.Provider>\n  )\n}\n\nexport function useTxs() {\n    return useContext(txContext)\n}\n"]},"metadata":{},"sourceType":"module"}