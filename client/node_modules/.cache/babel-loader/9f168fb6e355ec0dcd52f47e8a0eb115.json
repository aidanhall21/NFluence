{"ast":null,"code":"var _jsxFileName = \"/Users/aidanhall/Desktop/nsft/client/src/components/Bid/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./Bid.module.sass\";\nimport Form from \"../Form\";\nimport { formatAmountInput } from \"../../mocks/functions\";\nimport { useParams } from \"react-router\";\nimport { useUser } from \"../../providers/UserProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst items = [{\n  title: \"Enter bid\",\n  value: \"ETH\"\n}, {\n  title: \"Your balance\",\n  value: \"8.498 ETH\"\n}, {\n  title: \"Service fee\",\n  value: \"0 ETH\"\n}, {\n  title: \"Total bid amount\",\n  value: \"0 ETH\"\n}];\n\nconst Bid = ({\n  className,\n  data\n}) => {\n  _s();\n\n  const [bid, setBid] = useState(false);\n  const [nofunds, setNofunds] = useState(false);\n  const [minfault, setMinfault] = useState(false);\n  const {\n    address,\n    nftid\n  } = useParams();\n  const {\n    bidOnAuction,\n    balance\n  } = useUser();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMinfault(false);\n    setNofunds(false);\n\n    if (parseInt(bid) <= parseInt(data.minNextBid)) {\n      setMinfault(true);\n      return;\n    }\n\n    if (balance < parseInt(bid)) {\n      setNofunds(true);\n      return;\n    }\n\n    await bidOnAuction(parseInt(nftid), address, formatAmountInput(bid));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(className, styles.checkout),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(\"h4\", styles.title),\n      children: \"Place a bid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.info,\n      children: [\"You are about to bid on \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.text,\n      children: [\"Minimum bid $\", parseInt(data.minNextBid).toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.table,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: styles.form,\n          onSubmit: () => handleSubmit(),\n          value: bid,\n          placeholder: \"Bid Amount\",\n          setValue: setBid,\n          type: \"number\",\n          name: \"bid\",\n          step: 1,\n          min: parseInt(data.minNextBid)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), minfault && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.text,\n      children: \"Bid must be higher than the minimum accepted bid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this), nofunds && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.text,\n      children: \"You do not have the funds available to submit this bid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.btns,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cn(\"button\", styles.button),\n        onClick: handleSubmit,\n        children: \"Place a bid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bid, \"k0IdBPOTIcNAZlTOgY/JVYrYZ7I=\", false, function () {\n  return [useParams, useUser];\n});\n\n_c = Bid;\nexport default Bid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bid\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft/client/src/components/Bid/index.js"],"names":["React","useState","cn","styles","Form","formatAmountInput","useParams","useUser","items","title","value","Bid","className","data","bid","setBid","nofunds","setNofunds","minfault","setMinfault","address","nftid","bidOnAuction","balance","handleSubmit","e","preventDefault","parseInt","minNextBid","checkout","info","text","toString","table","row","form","btns","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./Bid.module.sass\";\nimport Form from \"../Form\";\nimport { formatAmountInput } from \"../../mocks/functions\";\nimport { useParams } from \"react-router\";\nimport { useUser } from \"../../providers/UserProvider\";\n\nconst items = [\n  {\n    title: \"Enter bid\",\n    value: \"ETH\",\n  },\n  {\n    title: \"Your balance\",\n    value: \"8.498 ETH\",\n  },\n  {\n    title: \"Service fee\",\n    value: \"0 ETH\",\n  },\n  {\n    title: \"Total bid amount\",\n    value: \"0 ETH\",\n  },\n];\n\nconst Bid = ({ className, data }) => {\n  const [bid, setBid] = useState(false)\n  const [nofunds, setNofunds] = useState(false)\n  const [minfault, setMinfault] = useState(false)\n\n  const { address, nftid } = useParams()\n  const { bidOnAuction, balance } = useUser()\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMinfault(false)\n    setNofunds(false)\n    if (parseInt(bid) <= parseInt(data.minNextBid)) {\n      setMinfault(true)\n      return\n    }\n    if (balance < parseInt(bid)) {\n      setNofunds(true)\n      return\n    }\n    await bidOnAuction(parseInt(nftid), address, formatAmountInput(bid));\n  };\n\n  return (\n    <div className={cn(className, styles.checkout)}>\n      <div className={cn(\"h4\", styles.title)}>Place a bid</div>\n      <div className={styles.info}>\n        You are about to bid on <strong>{data.title}</strong>\n      </div>\n      <div className={styles.text}>\n            Minimum bid ${parseInt(data.minNextBid).toString()}\n          </div>\n      <div className={styles.table}>\n        <div className={styles.row}>\n          <Form\n            className={styles.form}\n            onSubmit={() => handleSubmit()}\n            value={bid}\n            placeholder=\"Bid Amount\"\n            setValue={setBid}\n            type=\"number\"\n            name=\"bid\"\n            step={1}\n            min={parseInt(data.minNextBid)}\n          />\n          {/*<div className={styles.col}>Starting Price</div>\n            <div className={styles.col}>value</div>*/}\n        </div>\n      </div>\n      {minfault && (<div className={styles.text}>\n            Bid must be higher than the minimum accepted bid\n          </div>)}\n          {nofunds && (<div className={styles.text}>\n            You do not have the funds available to submit this bid\n          </div>)}\n      {/*<div className={styles.table}>\n        {items.map((x, index) => (\n          <div className={styles.row} key={index}>\n            <div className={styles.col}>{x.title}</div>\n            <div className={styles.col}>{x.value}</div>\n          </div>\n        ))}\n        </div>*/}\n      <div className={styles.btns}>\n        <button className={cn(\"button\", styles.button)} onClick={handleSubmit}>Place a bid</button>\n       {/*<button className={cn(\"button-stroke\", styles.button)}>Cancel</button>*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Bid;\n"]},"metadata":{},"sourceType":"module"}