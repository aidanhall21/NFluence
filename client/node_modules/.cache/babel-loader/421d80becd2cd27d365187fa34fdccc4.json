{"ast":null,"code":"var _jsxFileName = \"/Users/aidanhall/Desktop/nsft/client/src/components/Card/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport cn from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Card.module.sass\";\nimport Icon from \"../Icon\";\nimport { createTokenLink } from \"../../mocks/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = ({\n  className,\n  item\n}) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [metadata, setMetadata] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await createTokenLink(item);\n      setMetadata(res);\n    };\n\n    fetchData();\n  }, [item]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(styles.card, className),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.preview,\n      children: [item.fileType === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: metadata.image,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: metadata.image,\n          alt: \"Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: cn(\"button-small\", styles.button),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Start Auction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"scatter-up\",\n            size: \"16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: styles.link,\n      to: {\n        pathname: `/item/${item.creatorAddress}/${item.nftId}`,\n        state: {\n          item: item,\n          metadata: metadata\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.body,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.line,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.title,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.line,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.users,\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.counter,\n            children: [\"/\", item.editionSize]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"nl2LncHEDbhD9M767G+/ZrK6gY4=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft/client/src/components/Card/index.js"],"names":["React","useEffect","useState","cn","Link","styles","Icon","createTokenLink","Card","className","item","visible","setVisible","metadata","setMetadata","fetchData","res","card","preview","fileType","image","control","button","link","pathname","creatorAddress","nftId","state","body","line","title","users","description","counter","editionSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport cn from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Card.module.sass\";\nimport Icon from \"../Icon\";\nimport { createTokenLink } from \"../../mocks/functions\";\n\nconst Card = ({ className, item }) => {\n  const [visible, setVisible] = useState(false);\n  const [metadata, setMetadata] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await createTokenLink(item);\n      setMetadata(res)\n    }\n    fetchData()\n  }, [item]);\n\n  return (\n    <div className={cn(styles.card, className)}>\n      <div className={styles.preview}>\n        {item.fileType === 1 ? (\n          <>\n            <video controls>\n              <source src={metadata.image} type=\"video/mp4\" />\n            </video>\n          </>\n        ) : (\n          <>\n            <img src={metadata.image} alt=\"Card\" />\n          </>\n        )}\n        <div className={styles.control}>\n          {/*<div\n            className={cn(\n              { \"status-green\": item.category === \"green\" },\n              styles.category\n            )}\n          >\n            {item.categoryText}\n          </div>\n          <button\n            className={cn(styles.favorite, { [styles.active]: visible })}\n            onClick={() => setVisible(!visible)}\n          >\n            <Icon name=\"heart\" size=\"20\" />\n            </button>*/}\n          <button className={cn(\"button-small\", styles.button)}>\n            <span>Start Auction</span>\n            <Icon name=\"scatter-up\" size=\"16\" />\n          </button>\n        </div>\n      </div>\n      <Link className={styles.link} to={{\n        pathname: `/item/${item.creatorAddress}/${item.nftId}`,\n        state: {\n          item: item,\n          metadata: metadata\n        }\n      }}>\n        <div className={styles.body}>\n          <div className={styles.line}>\n            <div className={styles.title}>{item.title}</div>\n            {/*<div className={styles.price}>{item.price}</div>*/}\n          </div>\n          <div className={styles.line}>\n          <div className={styles.users}>\n              {item.description}\n            </div>\n            <div className={styles.counter}>/{item.editionSize}</div>\n          </div>\n        </div>\n        {/*<div className={styles.foot}>\n          <div className={styles.status}>\n            <Icon name=\"candlesticks-up\" size=\"20\" />\n            Highest bid <span>{item.highestBid}</span>\n          </div>\n          <div\n            className={styles.bid}\n            dangerouslySetInnerHTML={{ __html: item.bid }}\n          />\n          </div>*/}\n      </Link>\n    </div>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}