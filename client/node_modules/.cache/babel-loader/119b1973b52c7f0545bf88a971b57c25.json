{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer } from 'react';\nimport { defaultReducer } from '../reducer/defaultReducer';\nimport { useUser } from '../providers/UserProvider';\nimport { Pack } from '../utils/PackClass';\nimport { mutate, query, tx } from '@onflow/fcl';\nimport { LIST_PACKS } from '../flow/list-packs.script';\nimport { GET_PACK } from '../flow/get-pack.script';\nimport { LIST_DAPPIES_IN_PACK } from '../flow/list-dappies-in-pack.script';\nimport { MINT_DAPPIES_FROM_PACK } from '../flow/mint-dappies-from-pack.tx';\nimport { useTxs } from '../providers/TxProvider';\nexport default function useDappyPacks() {\n  _s();\n\n  const [state, dispatch] = useReducer(defaultReducer, {\n    loading: true,\n    error: false,\n    data: []\n  });\n  const {\n    collection,\n    batchAddDappies,\n    getFUSDBalance\n  } = useUser();\n  const {\n    addTx,\n    runningTxs\n  } = useTxs();\n  useEffect(() => {\n    const fetchPacks = async () => {\n      dispatch({\n        type: 'PROCESSING'\n      });\n\n      try {\n        const res = await query({\n          cadence: LIST_PACKS\n        });\n        dispatch({\n          type: 'SUCCESS',\n          payload: res\n        });\n      } catch (err) {\n        dispatch({\n          type: 'ERROR'\n        });\n      }\n    };\n\n    fetchPacks();\n  }, []);\n\n  const fetchPackDetails = async packID => {\n    let res = await query({\n      cadence: GET_PACK,\n      args: (arg, t) => [arg(packID, t.UInt32)]\n    });\n    console.log(res);\n    return new Pack(res === null || res === void 0 ? void 0 : res.familyID, res === null || res === void 0 ? void 0 : res.name, res === null || res === void 0 ? void 0 : res.price);\n  };\n\n  const fetchDappiesOfPack = async packID => {\n    let res = await query({\n      cadence: LIST_DAPPIES_IN_PACK,\n      args: (arg, t) => [arg(packID, t.UInt32)]\n    });\n    return res;\n  };\n\n  const mintFromPack = async (packID, dappies, amount) => {\n    if (!collection) {\n      alert(`\n      You need to enable the collection first. \n      Go to the tab 'Collection' and click on 'Create Collection'.`);\n      return;\n    }\n\n    if (runningTxs) {\n      alert(\"transactions are still running\");\n      return;\n    }\n\n    var dappiesToMint = [];\n\n    for (let index = 0; index < dappies.length; index++) {\n      if (index > 4) break;\n      const randomNumber = Math.floor(Math.random() * dappies.length);\n      dappiesToMint.push(dappies[randomNumber]);\n    }\n\n    let packNum = parseInt(packID.replace(\"Pack\", \"\"));\n    let res = await mutate({\n      cadence: MINT_DAPPIES_FROM_PACK,\n      limit: 300,\n      args: (arg, t) => [arg(packNum, t.UInt32), arg(dappiesToMint, t.Array(t.UInt32)), arg(amount, t.UFix64)]\n    });\n    addTx(res);\n    await tx(res).onceSealed();\n    await getFUSDBalance();\n    batchAddDappies(dappiesToMint);\n  };\n\n  return { ...state,\n    fetchDappiesOfPack,\n    fetchPackDetails,\n    mintFromPack\n  };\n}\n\n_s(useDappyPacks, \"gaWih3mCkG4o2GFpL8Un6732UCc=\", false, function () {\n  return [useUser, useTxs];\n});","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft-v3/src/hooks/use-dappy-packs.hook.js"],"names":["useEffect","useReducer","defaultReducer","useUser","Pack","mutate","query","tx","LIST_PACKS","GET_PACK","LIST_DAPPIES_IN_PACK","MINT_DAPPIES_FROM_PACK","useTxs","useDappyPacks","state","dispatch","loading","error","data","collection","batchAddDappies","getFUSDBalance","addTx","runningTxs","fetchPacks","type","res","cadence","payload","err","fetchPackDetails","packID","args","arg","t","UInt32","console","log","familyID","name","price","fetchDappiesOfPack","mintFromPack","dappies","amount","alert","dappiesToMint","index","length","randomNumber","Math","floor","random","push","packNum","parseInt","replace","limit","Array","UFix64","onceSealed"],"mappings":"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","sourcesContent":["import { useEffect, useReducer } from 'react'\nimport { defaultReducer } from '../reducer/defaultReducer'\nimport { useUser } from '../providers/UserProvider'\n\nimport { Pack } from '../utils/PackClass'\nimport { mutate, query, tx } from '@onflow/fcl'\nimport { LIST_PACKS } from '../flow/list-packs.script'\nimport { GET_PACK } from '../flow/get-pack.script'\nimport { LIST_DAPPIES_IN_PACK } from '../flow/list-dappies-in-pack.script'\nimport { MINT_DAPPIES_FROM_PACK } from '../flow/mint-dappies-from-pack.tx'\nimport { useTxs } from '../providers/TxProvider'\n\nexport default function useDappyPacks() {\n  const [state, dispatch] = useReducer(defaultReducer, {\n    loading: true,\n    error: false,\n    data: []\n  })\n  const { collection, batchAddDappies, getFUSDBalance } = useUser()\n  const {addTx, runningTxs} = useTxs();\n\n  useEffect(() => {\n    const fetchPacks = async () => {\n      dispatch({ type: 'PROCESSING' })\n      try {\n        const res = await query({\n          cadence: LIST_PACKS\n        })\n        dispatch({ type: 'SUCCESS', payload: res })\n      } catch (err) {\n        dispatch({ type: 'ERROR' })\n      }\n    }\n    fetchPacks()\n  }, [])\n\n  const fetchPackDetails = async (packID) => {\n    let res = await query({\n      cadence: GET_PACK,\n      args: (arg, t) => [arg(packID, t.UInt32)]\n    })\n    console.log(res)\n    return new Pack(res?.familyID, res?.name, res?.price)\n  }\n\n  const fetchDappiesOfPack = async (packID) => {\n    let res = await query({\n      cadence: LIST_DAPPIES_IN_PACK,\n      args: (arg, t) => [arg(packID, t.UInt32)]\n    })\n    return res;\n  }\n\n  const mintFromPack = async (packID, dappies, amount) => {\n    if (!collection) {\n      alert(`\n      You need to enable the collection first. \n      Go to the tab 'Collection' and click on 'Create Collection'.`)\n      return\n    }\n\n    if (runningTxs) {\n      alert(\"transactions are still running\")\n      return\n    }\n\n    var dappiesToMint = []\n\n    for (let index = 0; index < dappies.length; index++) {\n      if (index > 4) break\n      const randomNumber = Math.floor(Math.random() * dappies.length);\n      dappiesToMint.push(dappies[randomNumber])\n    }\n\n    let packNum = parseInt(packID.replace(\"Pack\", \"\"))\n    let res = await mutate({\n      cadence: MINT_DAPPIES_FROM_PACK,\n      limit: 300,\n      args: (arg, t) => [arg(packNum, t.UInt32), arg(dappiesToMint, t.Array(t.UInt32)), arg(amount, t.UFix64)]\n    })\n    addTx(res);\n    await tx(res).onceSealed();\n    await getFUSDBalance()\n\n    batchAddDappies(dappiesToMint)\n  }\n\n\n  return {\n    ...state,\n    fetchDappiesOfPack,\n    fetchPackDetails,\n    mintFromPack,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}