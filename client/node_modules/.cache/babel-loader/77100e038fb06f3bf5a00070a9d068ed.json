{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer } from 'react';\nimport { userDappyReducer } from '../reducer/userDappyReducer';\nimport DappyClass from '../utils/DappyClass';\nimport { mutate, query, tx } from '@onflow/fcl';\nimport { LIST_USER_DAPPIES } from '../flow/list-user-dappies.script';\nimport { MINT_DAPPY } from '../flow/mint-dappy.tx';\nimport { useTxs } from '../providers/TxProvider';\nexport default function useUserDappies(user, collection, getFUSDBalance) {\n  _s();\n\n  const [state, dispatch] = useReducer(userDappyReducer, {\n    loading: false,\n    error: false,\n    data: []\n  });\n  const {\n    addTx\n  } = useTxs();\n  useEffect(() => {\n    const fetchUserDappies = async () => {\n      dispatch({\n        type: 'PROCESSING'\n      });\n\n      try {\n        let res = await query({\n          cadence: LIST_USER_DAPPIES,\n          args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address)]\n        });\n        let mappedDappies = [];\n\n        for (let key in res) {\n          const element = res[key];\n          let dappy = new DappyClass(element.templateID, element.dna, element.price, element.name, key);\n          mappedDappies.push(dappy);\n        }\n\n        dispatch({\n          type: 'SUCCESS',\n          payload: mappedDappies\n        });\n      } catch (err) {\n        dispatch({\n          type: 'ERROR'\n        });\n      }\n    };\n\n    fetchUserDappies(); //eslint-disable-next-line\n  }, []);\n\n  const mintDappy = async (templateID, amount) => {\n    if (!collection) {\n      alert(\"no collection\");\n      return;\n    }\n\n    try {\n      let res = await mutate({\n        cadence: MINT_DAPPY,\n        limit: 55,\n        args: (arg, t) => [arg(templateID, t.UInt32), arg(amount, t.UFix64)]\n      });\n      addTx(res);\n      await tx(res).onceSealed();\n      await getFUSDBalance();\n      await addDappy(templateID);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addDappy = async templateID => {\n    try {\n      let res = await query({\n        cadence: LIST_USER_DAPPIES,\n        args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address)]\n      });\n      const dappies = Object.values(res);\n      const dappy = dappies.find(d => (d === null || d === void 0 ? void 0 : d.templateID) === templateID);\n      const newDappy = new DappyClass(dappy.templateID, dappy.dna, dappy.name);\n      dispatch({\n        type: 'ADD',\n        payload: newDappy\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const batchAddDappies = async dappies => {\n    try {\n      let res = await query({\n        cadence: LIST_USER_DAPPIES,\n        args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address)]\n      });\n      const allDappies = Object.values(res);\n      const dappyToAdd = allDappies.filter(d => dappies.includes(d === null || d === void 0 ? void 0 : d.templateID));\n      const newDappies = dappyToAdd.map(d => new DappyClass(d.templateID, d.dna, d.name));\n\n      for (let index = 0; index < newDappies.length; index++) {\n        const element = newDappies[index];\n        dispatch({\n          type: 'ADD',\n          payload: element\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return { ...state,\n    mintDappy,\n    addDappy,\n    batchAddDappies\n  };\n}\n\n_s(useUserDappies, \"E5RDZpeVJn+r3HiRUG+cZ19Krw8=\", false, function () {\n  return [useTxs];\n});","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft-v3/src/hooks/use-user-dappies.hook.js"],"names":["useEffect","useReducer","userDappyReducer","DappyClass","mutate","query","tx","LIST_USER_DAPPIES","MINT_DAPPY","useTxs","useUserDappies","user","collection","getFUSDBalance","state","dispatch","loading","error","data","addTx","fetchUserDappies","type","res","cadence","args","arg","t","addr","Address","mappedDappies","key","element","dappy","templateID","dna","price","name","push","payload","err","mintDappy","amount","alert","limit","UInt32","UFix64","onceSealed","addDappy","console","log","dappies","Object","values","find","d","newDappy","batchAddDappies","allDappies","dappyToAdd","filter","includes","newDappies","map","index","length"],"mappings":"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","sourcesContent":["import { useEffect, useReducer } from 'react'\nimport { userDappyReducer } from '../reducer/userDappyReducer'\nimport DappyClass from '../utils/DappyClass'\nimport { mutate, query, tx } from '@onflow/fcl'\nimport { LIST_USER_DAPPIES } from '../flow/list-user-dappies.script'\nimport { MINT_DAPPY } from '../flow/mint-dappy.tx'\nimport { useTxs } from '../providers/TxProvider'\n\nexport default function useUserDappies(user, collection, getFUSDBalance) {\n  const [state, dispatch] = useReducer(userDappyReducer, {\n    loading: false,\n    error: false,\n    data: []\n  })\n\n  const { addTx } = useTxs()\n\n  useEffect(() => {\n    const fetchUserDappies = async () => {\n      dispatch({ type: 'PROCESSING' })\n      try {\n        let res = await query({\n          cadence: LIST_USER_DAPPIES,\n          args: (arg, t) => [arg(user?.addr, t.Address)]\n        });\n        let mappedDappies = []\n\n        for (let key in res) {\n          const element = res[key]\n          let dappy = new DappyClass(element.templateID, element.dna, element.price, element.name, key)\n          mappedDappies.push(dappy)\n        }\n        dispatch({ type: 'SUCCESS', payload: mappedDappies })\n      } catch (err) {\n        dispatch({ type: 'ERROR' })\n      }\n    }\n    fetchUserDappies()\n    //eslint-disable-next-line\n  }, [])\n\n  const mintDappy = async (templateID, amount) => {\n    if(!collection) {\n      alert(\"no collection\")\n      return \n    }\n\n    try {\n      let res = await mutate({\n        cadence: MINT_DAPPY,\n        limit: 55,\n        args: (arg, t) => [arg(templateID, t.UInt32), arg(amount, t.UFix64)]\n      })\n      addTx(res)\n      await tx(res).onceSealed()\n      await getFUSDBalance()\n      await addDappy(templateID)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const addDappy = async (templateID) => {\n    try {\n      let res = await query({\n        cadence: LIST_USER_DAPPIES,\n        args: (arg, t) => [arg(user?.addr, t.Address)]\n      })\n      const dappies = Object.values(res)\n      const dappy = dappies.find(d => d?.templateID === templateID)\n      const newDappy = new DappyClass(dappy.templateID, dappy.dna, dappy.name)\n      dispatch({ type: 'ADD', payload: newDappy })\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const batchAddDappies = async (dappies) => {\n    try {\n      let res = await query({\n        cadence: LIST_USER_DAPPIES,\n        args: (arg, t) => [arg(user?.addr, t.Address)]\n      })\n      const allDappies = Object.values(res)\n      const dappyToAdd = allDappies.filter(d => dappies.includes(d?.templateID))\n      const newDappies = dappyToAdd.map(d => new DappyClass(d.templateID, d.dna, d.name))\n      for (let index = 0; index < newDappies.length; index++) {\n        const element = newDappies[index];\n        dispatch({ type: 'ADD', payload: element })\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  return {\n    ...state,\n    mintDappy,\n    addDappy,\n    batchAddDappies\n  }\n}\n"]},"metadata":{},"sourceType":"module"}