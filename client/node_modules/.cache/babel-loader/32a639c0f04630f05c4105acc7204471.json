{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer } from 'react';\nimport { defaultReducer } from '../reducer/defaultReducer';\nimport { useUser } from '../providers/UserProvider';\nimport { Pack } from '../utils/PackClass';\nimport { DEFAULT_PACKS } from '../config/packs.config';\nexport default function useDappyPacks() {\n  _s();\n\n  const [state, dispatch] = useReducer(defaultReducer, {\n    loading: true,\n    error: false,\n    data: []\n  });\n  const {\n    collection,\n    batchAddDappies\n  } = useUser();\n  useEffect(() => {\n    const fetchPacks = async () => {\n      dispatch({\n        type: 'PROCESSING'\n      });\n\n      try {\n        const res = DEFAULT_PACKS;\n        dispatch({\n          type: 'SUCCESS',\n          payload: res\n        });\n      } catch (err) {\n        dispatch({\n          type: 'ERROR'\n        });\n      }\n    };\n\n    fetchPacks();\n  }, []);\n\n  const fetchPackDetails = async packID => {\n    let res = DEFAULT_PACKS.find(p => p.familyID === packID);\n    return new Pack(res === null || res === void 0 ? void 0 : res.familyID, res === null || res === void 0 ? void 0 : res.name, res === null || res === void 0 ? void 0 : res.price);\n  };\n\n  const fetchDappiesOfPack = async packID => {\n    var _DEFAULT_PACKS$find;\n\n    let res = (_DEFAULT_PACKS$find = DEFAULT_PACKS.find(p => p.familyID === packID)) === null || _DEFAULT_PACKS$find === void 0 ? void 0 : _DEFAULT_PACKS$find.templates;\n    return res;\n  };\n\n  const mintFromPack = async (packID, dappies, amount) => {\n    if (!collection) {\n      alert(`\n      You need to enable the collection first. \n      Go to the tab 'Collection' and click on 'Create Collection'.`);\n      return;\n    }\n\n    var dappiesToMint = [];\n\n    for (let index = 0; index < dappies.length; index++) {\n      if (index > 4) break;\n      const randomNumber = Math.floor(Math.random() * dappies.length);\n      dappiesToMint.push(dappies[randomNumber]);\n    }\n\n    batchAddDappies(dappiesToMint);\n  };\n\n  return { ...state,\n    fetchDappiesOfPack,\n    fetchPackDetails,\n    mintFromPack\n  };\n}\n\n_s(useDappyPacks, \"AckDUkCFP6fHWZ1EZ8BIS6ozBgI=\", false, function () {\n  return [useUser];\n});","map":{"version":3,"sources":["/Users/aidanhall/Desktop/crypto-dappy/src/hooks/use-dappy-packs.hook.js"],"names":["useEffect","useReducer","defaultReducer","useUser","Pack","DEFAULT_PACKS","useDappyPacks","state","dispatch","loading","error","data","collection","batchAddDappies","fetchPacks","type","res","payload","err","fetchPackDetails","packID","find","p","familyID","name","price","fetchDappiesOfPack","templates","mintFromPack","dappies","amount","alert","dappiesToMint","index","length","randomNumber","Math","floor","random","push"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAT,QAAwB,2BAAxB;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,UAAU,CAACC,cAAD,EAAiB;AACnDO,IAAAA,OAAO,EAAE,IAD0C;AAEnDC,IAAAA,KAAK,EAAE,KAF4C;AAGnDC,IAAAA,IAAI,EAAE;AAH6C,GAAjB,CAApC;AAKA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAkCV,OAAO,EAA/C;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,UAAU,GAAG,YAAY;AAC7BN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;;AACA,UAAI;AACF,cAAMC,GAAG,GAAGX,aAAZ;AACAG,QAAAA,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAE,SAAR;AAAmBE,UAAAA,OAAO,EAAED;AAA5B,SAAD,CAAR;AACD,OAHD,CAGE,OAAOE,GAAP,EAAY;AACZV,QAAAA,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACD;AACF,KARD;;AASAD,IAAAA,UAAU;AACX,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMK,gBAAgB,GAAG,MAAOC,MAAP,IAAkB;AACzC,QAAIJ,GAAG,GAAGX,aAAa,CAACgB,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAeH,MAAvC,CAAV;AACA,WAAO,IAAIhB,IAAJ,CAASY,GAAT,aAASA,GAAT,uBAASA,GAAG,CAAEO,QAAd,EAAwBP,GAAxB,aAAwBA,GAAxB,uBAAwBA,GAAG,CAAEQ,IAA7B,EAAmCR,GAAnC,aAAmCA,GAAnC,uBAAmCA,GAAG,CAAES,KAAxC,CAAP;AACD,GAHD;;AAKA,QAAMC,kBAAkB,GAAG,MAAON,MAAP,IAAkB;AAAA;;AAC3C,QAAIJ,GAAG,0BAAGX,aAAa,CAACgB,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAeH,MAAvC,CAAH,wDAAG,oBAAgDO,SAA1D;AACA,WAAOX,GAAP;AACD,GAHD;;AAKA,QAAMY,YAAY,GAAG,OAAOR,MAAP,EAAeS,OAAf,EAAwBC,MAAxB,KAAmC;AACtD,QAAI,CAAClB,UAAL,EAAiB;AACfmB,MAAAA,KAAK,CAAE;AACb;AACA,mEAFW,CAAL;AAGA;AACD;;AAED,QAAIC,aAAa,GAAG,EAApB;;AAEA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,OAAO,CAACK,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AACnD,UAAIA,KAAK,GAAG,CAAZ,EAAe;AACf,YAAME,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,OAAO,CAACK,MAAnC,CAArB;AACAF,MAAAA,aAAa,CAACO,IAAd,CAAmBV,OAAO,CAACM,YAAD,CAA1B;AACD;;AAEDtB,IAAAA,eAAe,CAACmB,aAAD,CAAf;AACD,GAjBD;;AAoBA,SAAO,EACL,GAAGzB,KADE;AAELmB,IAAAA,kBAFK;AAGLP,IAAAA,gBAHK;AAILS,IAAAA;AAJK,GAAP;AAMD;;GAzDuBtB,a;UAMkBH,O","sourcesContent":["import { useEffect, useReducer } from 'react'\nimport { defaultReducer } from '../reducer/defaultReducer'\nimport { useUser } from '../providers/UserProvider'\n\nimport { Pack } from '../utils/PackClass'\nimport { DEFAULT_PACKS } from '../config/packs.config'\n\nexport default function useDappyPacks() {\n  const [state, dispatch] = useReducer(defaultReducer, {\n    loading: true,\n    error: false,\n    data: []\n  })\n  const { collection, batchAddDappies } = useUser()\n\n  useEffect(() => {\n    const fetchPacks = async () => {\n      dispatch({ type: 'PROCESSING' })\n      try {\n        const res = DEFAULT_PACKS\n        dispatch({ type: 'SUCCESS', payload: res })\n      } catch (err) {\n        dispatch({ type: 'ERROR' })\n      }\n    }\n    fetchPacks()\n  }, [])\n\n  const fetchPackDetails = async (packID) => {\n    let res = DEFAULT_PACKS.find(p => p.familyID === packID)\n    return new Pack(res?.familyID, res?.name, res?.price)\n  }\n\n  const fetchDappiesOfPack = async (packID) => {\n    let res = DEFAULT_PACKS.find(p => p.familyID === packID)?.templates\n    return res\n  }\n\n  const mintFromPack = async (packID, dappies, amount) => {\n    if (!collection) {\n      alert(`\n      You need to enable the collection first. \n      Go to the tab 'Collection' and click on 'Create Collection'.`)\n      return\n    }\n\n    var dappiesToMint = []\n\n    for (let index = 0; index < dappies.length; index++) {\n      if (index > 4) break\n      const randomNumber = Math.floor(Math.random() * dappies.length);\n      dappiesToMint.push(dappies[randomNumber])\n    }\n\n    batchAddDappies(dappiesToMint)\n  }\n\n\n  return {\n    ...state,\n    fetchDappiesOfPack,\n    fetchPackDetails,\n    mintFromPack,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}