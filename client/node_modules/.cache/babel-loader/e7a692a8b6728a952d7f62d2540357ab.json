{"ast":null,"code":"var _jsxFileName = \"/Users/aidanhall/Desktop/nsft/client/src/screens/UploadDetails/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./UploadDetails.module.sass\";\nimport Icon from \"../../components/Icon\";\nimport TextInput from \"../../components/TextInput\"; //import Switch from \"../../components/Switch\";\n\nimport Modal from \"../../components/Modal\";\nimport Preview from \"./Preview\";\nimport FolowSteps from \"./FolowSteps\";\nimport { NFTStorage } from \"nft.storage\";\nimport CryptoJs from 'crypto-js';\nimport { useUser } from \"../../providers/UserProvider\";\nimport { useHistory, useLocation } from \"react-router\"; //const royaltiesOptions = [\"10%\", \"20%\", \"30%\"];\n\n/*\nconst items = [\n  {\n    title: \"Create collection\",\n    color: \"#4BC9F0\",\n  },\n  {\n    title: \"Crypto Legend - Professor\",\n    color: \"#45B26B\",\n  },\n  {\n    title: \"Crypto Legend - Professor\",\n    color: \"#EF466F\",\n  },\n  {\n    title: \"Legend Photography\",\n    color: \"#9757D7\",\n  },\n];\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apikey = process.env.REACT_APP_NFT_STORAGE_KEY;\n\nconst encrypt = text => {\n  return CryptoJs.enc.Base64.stringify(CryptoJs.enc.Utf8.parse(text));\n};\n\nconst Upload = () => {\n  _s();\n\n  //const [royalties, setRoyalties] = useState(royaltiesOptions[0]);\n  //const [sale, setSale] = useState(true);\n  //const [price, setPrice] = useState(false);\n  //const [locking, setLocking] = useState(false);\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [visiblePreview, setVisiblePreview] = useState(false);\n  const [name, setName] = useState('');\n  const [desc, setDesc] = useState('');\n  const [preview, setPreview] = useState();\n  const [file, setFile] = useState();\n  const [success, setSuccess] = useState(false);\n  const [verified, setVerified] = useState(false);\n  const [fileCheck, setFileCheck] = useState(false);\n  const {\n    mintNsft,\n    collection,\n    loading,\n    error\n  } = useUser();\n  const location = useLocation();\n  const history = useHistory();\n  const client = new NFTStorage({\n    token: apikey\n  });\n\n  const handleNameChange = async e => {\n    setName(e);\n  };\n\n  const handleDescriptionChange = async e => {\n    setDesc(e);\n  };\n\n  const handleFileInput = async e => {\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n  }; // Test videos\n\n\n  const handleSubmit = async e => {\n    if (!collection) {\n      setVerified(true);\n      return;\n    }\n\n    if (!file) {\n      setFileCheck(true);\n      return;\n    }\n\n    setVisibleModal(true); //const files = e.nativeEvent[\"target\"][\"form\"][0].files[0]\n\n    const filetype = file[\"type\"].split(\"/\")[0];\n    let type;\n\n    if (filetype === 'image') {\n      type = 0;\n    } else if (filetype === 'video') {\n      type = 1;\n    } else {\n      type = 2;\n    }\n\n    const metadata = await client.store({\n      name: name,\n      description: desc,\n      image: file\n    });\n    let hash = metadata.url;\n    hash = encrypt(metadata.url); //eslint-disable-next-line\n\n    const tx = await mintNsft(hash, type, name, desc, 1).then(response => {\n      setSuccess(true);\n      console.log(response);\n    }).catch(err => {\n      setSuccess(false);\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(\"section\", styles.section),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"container\", styles.container),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.wrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.head,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: cn(\"h2\", styles.title),\n              children: location.pathname.split(\"/\")[1] === 'upload-single' ? 'Create single collectible' : 'Create multiple collectibles'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: cn(\"button-stroke button-small\", styles.button),\n              onClick: location.pathname.split(\"/\")[1] === 'upload-single' ? history.push('/upload-multiple') : history.push('/upload-single'),\n              children: location.pathname.split(\"/\")[1] === 'upload-single' ? 'Switch to Multiple' : 'Switch to Single'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: styles.form,\n            action: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.list,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.item,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.category,\n                  children: \"Upload file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.note,\n                  children: \"Drag or choose your file to upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.file,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: styles.load,\n                    type: \"file\",\n                    accept: \"image/*,video/*\",\n                    onChange: handleFileInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.icon,\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"upload-file\",\n                      size: \"24\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.format,\n                    children: \"Image and Video files accepted. Max 32Gb.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.item,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.category,\n                  children: \"NSFT Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.fieldset,\n                  children: [/*#__PURE__*/_jsxDEV(TextInput, {\n                    className: styles.field,\n                    label: \"Title\",\n                    name: \"NSFT\",\n                    type: \"text\",\n                    required: true,\n                    onChange: e => handleNameChange(e.currentTarget.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n                    className: styles.field,\n                    label: \"Description\",\n                    name: \"Description\",\n                    type: \"text\",\n                    placeholder: \"\",\n                    required: true,\n                    onChange: e => handleDescriptionChange(e.currentTarget.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.foot,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: cn(\"button-stroke tablet-show\", styles.button),\n                onClick: () => setVisiblePreview(true),\n                type: \"button\",\n                children: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: cn(\"button\", styles.button),\n                onClick: e => {\n                  handleSubmit(e);\n                } // type=\"button\" hide after form customization\n                ,\n                type: \"button\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Create item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"arrow-next\",\n                  size: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), verified && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"You must verify your account before you can mint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 31\n              }, this), fileCheck && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Please upload content before continuing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Preview, {\n          className: cn(styles.preview, {\n            [styles.active]: visiblePreview\n          }),\n          onClose: () => setVisiblePreview(false),\n          obj: {\n            file: preview,\n            name: name,\n            desc: desc\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visibleModal,\n      onClose: () => setVisibleModal(false),\n      children: /*#__PURE__*/_jsxDEV(FolowSteps, {\n        className: styles.steps,\n        obj: {\n          loading: loading,\n          error: error,\n          success: success\n        },\n        onClose: () => setVisibleModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Upload, \"k6IMJ3+uWph0wc+vjSJ9CLrt4Qg=\", false, function () {\n  return [useUser, useLocation, useHistory];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft/client/src/screens/UploadDetails/index.js"],"names":["React","useState","cn","styles","Icon","TextInput","Modal","Preview","FolowSteps","NFTStorage","CryptoJs","useUser","useHistory","useLocation","apikey","process","env","REACT_APP_NFT_STORAGE_KEY","encrypt","text","enc","Base64","stringify","Utf8","parse","Upload","visibleModal","setVisibleModal","visiblePreview","setVisiblePreview","name","setName","desc","setDesc","preview","setPreview","file","setFile","success","setSuccess","verified","setVerified","fileCheck","setFileCheck","mintNsft","collection","loading","error","location","history","client","token","handleNameChange","e","handleDescriptionChange","handleFileInput","URL","createObjectURL","target","files","handleSubmit","filetype","split","type","metadata","store","description","image","hash","url","tx","then","response","console","log","catch","err","section","container","wrapper","head","title","pathname","button","push","form","list","item","category","note","load","icon","format","fieldset","field","currentTarget","value","foot","active","steps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./UploadDetails.module.sass\";\nimport Icon from \"../../components/Icon\";\nimport TextInput from \"../../components/TextInput\";\n//import Switch from \"../../components/Switch\";\nimport Modal from \"../../components/Modal\";\nimport Preview from \"./Preview\";\nimport FolowSteps from \"./FolowSteps\";\nimport { NFTStorage } from \"nft.storage\"\nimport CryptoJs from 'crypto-js'\nimport { useUser } from \"../../providers/UserProvider\";\nimport { useHistory, useLocation } from \"react-router\";\n\n//const royaltiesOptions = [\"10%\", \"20%\", \"30%\"];\n/*\nconst items = [\n  {\n    title: \"Create collection\",\n    color: \"#4BC9F0\",\n  },\n  {\n    title: \"Crypto Legend - Professor\",\n    color: \"#45B26B\",\n  },\n  {\n    title: \"Crypto Legend - Professor\",\n    color: \"#EF466F\",\n  },\n  {\n    title: \"Legend Photography\",\n    color: \"#9757D7\",\n  },\n];\n*/\n\nconst apikey = process.env.REACT_APP_NFT_STORAGE_KEY\n\nconst encrypt = (text) => {\n  return CryptoJs.enc.Base64.stringify(CryptoJs.enc.Utf8.parse(text))\n}\n\nconst Upload = () => {\n  //const [royalties, setRoyalties] = useState(royaltiesOptions[0]);\n  //const [sale, setSale] = useState(true);\n  //const [price, setPrice] = useState(false);\n  //const [locking, setLocking] = useState(false);\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [visiblePreview, setVisiblePreview] = useState(false);\n  const [name, setName] = useState('')\n  const [desc, setDesc] = useState('')\n  const [preview, setPreview] = useState()\n  const [file, setFile] = useState()\n  const [success, setSuccess] = useState(false)\n  const [verified, setVerified] = useState(false)\n  const [fileCheck, setFileCheck] = useState(false)\n\n  const { mintNsft, collection, loading, error } = useUser()\n\n  const location = useLocation()\n  const history = useHistory()\n\n  const client = new NFTStorage({ token: apikey })\n\n  const handleNameChange = async (e) => {\n    setName(e)\n  }\n\n  const handleDescriptionChange = async (e) => {\n    setDesc(e)\n  }\n\n  const handleFileInput = async (e) => {\n    setPreview(URL.createObjectURL(e.target.files[0]))\n    setFile(e.target.files[0])\n  }\n\n  // Test videos\n\n  const handleSubmit = async (e) => {\n    if (!collection) {\n      setVerified(true)\n      return\n    }\n\n    if (!file) {\n      setFileCheck(true)\n      return\n    }\n\n    setVisibleModal(true)\n\n    //const files = e.nativeEvent[\"target\"][\"form\"][0].files[0]\n    const filetype = file[\"type\"].split(\"/\")[0]\n    let type;\n    if (filetype === 'image') {\n      type = 0\n    } else if (filetype === 'video') {\n      type = 1\n    } else {\n      type = 2\n    }\n\n    const metadata = await client.store({\n      name: name,\n      description: desc,\n      image: file\n    })\n\n    let hash = metadata.url\n    hash = encrypt(metadata.url)\n\n    //eslint-disable-next-line\n    const tx = await mintNsft(hash, type, name, desc, 1)\n    .then((response) => {\n      setSuccess(true)\n      console.log(response)\n    })\n    .catch((err) => {\n      setSuccess(false)\n      console.log(err)\n    })\n    \n  }\n\n  return (\n    <>\n      <div className={cn(\"section\", styles.section)}>\n        <div className={cn(\"container\", styles.container)}>\n          <div className={styles.wrapper}>\n            <div className={styles.head}>\n              <div className={cn(\"h2\", styles.title)}>\n                {location.pathname.split(\"/\")[1] === 'upload-single' ? 'Create single collectible' : 'Create multiple collectibles'}\n              </div>\n              <button\n                className={cn(\"button-stroke button-small\", styles.button)}\n                onClick={location.pathname.split(\"/\")[1] === 'upload-single' ? history.push('/upload-multiple') : history.push('/upload-single')}\n              >\n                {location.pathname.split(\"/\")[1] === 'upload-single' ? 'Switch to Multiple' : 'Switch to Single'}\n              </button>\n            </div>\n            <form className={styles.form} action=\"\">\n              <div className={styles.list}>\n                <div className={styles.item}>\n                  <div className={styles.category}>Upload file</div>\n                  <div className={styles.note}>\n                    Drag or choose your file to upload\n                  </div>\n                  <div className={styles.file}>\n                    <input className={styles.load} type=\"file\" accept=\"image/*,video/*\" onChange={handleFileInput} />\n                    <div className={styles.icon}>\n                      <Icon name=\"upload-file\" size=\"24\" />\n                    </div>\n                    <div className={styles.format}>\n                      Image and Video files accepted. Max 32Gb.\n                    </div>\n                  </div>\n                </div>\n                <div className={styles.item}>\n                  <div className={styles.category}>NSFT Details</div>\n                  <div className={styles.fieldset}>\n                    <TextInput\n                      className={styles.field}\n                      label=\"Title\"\n                      name=\"NSFT\"\n                      type=\"text\"\n                      required\n                      onChange={(e) => handleNameChange(e.currentTarget.value)}\n                    />\n                    <TextInput\n                      className={styles.field}\n                      label=\"Description\"\n                      name=\"Description\"\n                      type=\"text\"\n                      placeholder=\"\"\n                      required\n                      onChange={(e) => handleDescriptionChange(e.currentTarget.value)}\n                    />\n                  </div>\n                </div>\n              </div>\n              {/*<div className={styles.options}>\n                <div className={styles.option}>\n                  <div className={styles.box}>\n                    <div className={styles.category}>Put up for auction</div>\n                    <div className={styles.text}>\n                      This item will be up for auction and you'll be able to receive bids immediately.\n                    </div>\n                  </div>\n                  <Switch value={sale} setValue={setSale} />\n                </div>\n                <div className={styles.option}>\n                  <div className={styles.box}>\n                    <div className={styles.category}>Unlock once purchased</div>\n                    <div className={styles.text}>\n                      If checked then the content of your item will only be viewable after a successful sale.\n                    </div>\n                  </div>\n                  <Switch value={locking} setValue={setLocking} />\n                </div>\n                </div>*/}\n              <div className={styles.foot}>\n                <button\n                  className={cn(\"button-stroke tablet-show\", styles.button)}\n                  onClick={() => setVisiblePreview(true)}\n                  type=\"button\"\n                >\n                  Preview\n                </button>\n                <button\n                  className={cn(\"button\", styles.button)}\n                  onClick={(e) => {\n                    handleSubmit(e)\n                  }}\n                  // type=\"button\" hide after form customization\n                  type=\"button\"\n                >\n                  <span>Create item</span>\n                  <Icon name=\"arrow-next\" size=\"10\" />\n                </button>\n                {verified && (<div>You must verify your account before you can mint</div>)}\n                {fileCheck && (<div>Please upload content before continuing</div>)  }\n              </div>\n            </form>\n          </div>\n          <Preview\n            className={cn(styles.preview, { [styles.active]: visiblePreview })}\n            onClose={() => setVisiblePreview(false)}\n            obj={{\n              file: preview,\n              name: name,\n              desc: desc\n            }}\n          />\n        </div>\n      </div>\n      <Modal visible={visibleModal} onClose={() => setVisibleModal(false)}>\n        <FolowSteps className={styles.steps} obj={{ loading: loading, error: error, success: success }} onClose={() => setVisibleModal(false)} />\n      </Modal>\n    </>\n  );\n};\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}