{"ast":null,"code":"var _jsxFileName = \"/Users/aidanhall/Desktop/nsft/client/src/screens/Profile/User/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./User.module.sass\";\nimport Icon from \"../../../components/Icon\";\nimport { useUser } from \"../../../providers/UserProvider\";\nimport { useAuth } from \"../../../providers/AuthProvider\";\nimport axios from \"axios\"; // import { isStepDivisible } from \"react-range/lib/utils\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst stripe = require('stripe')(process.env.STRIPE_TEST_API_KEY);\n\nlet api_node;\nprocess.env.NODE_ENV === \"production\" ? api_node = '' : api_node = process.env.REACT_APP_LOCAL_API_NODE;\n\nconst User = ({\n  className,\n  data,\n  handle\n}) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [verifying, setVerifying] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  console.log('data', data);\n  const socials = [{\n    title: \"twitter\",\n    url: `https://twitter.com/${data.twitter !== null ? data.twitter : ''}`\n  }, {\n    title: \"instagram\",\n    url: `https://www.instagram.com/${data.instagram !== null ? data.instagram : ''}`\n  }];\n  const {\n    user\n  } = useAuth();\n  const {\n    collection,\n    profile,\n    createCollection,\n    fetchUserData,\n    collectionError\n  } = useUser();\n  console.log(\"collection\", collection);\n  console.log('err', collectionError);\n\n  const verify = async () => {\n    setVerifying(true);\n    console.log(collectionError);\n    await createCollection();\n    const account = await stripe.accounts.create({\n      type: 'express'\n    });\n    const accounts = await stripe.accountLinks.create({\n      account: account.id,\n      refresh_url: 'https://example.com/reauth',\n      return_url: 'https://nsftonight.com/user',\n      type: 'account_onboarding'\n    });\n    window.location.assign(accounts.url);\n\n    if (!data.db) {\n      console.log('adding to db');\n      await axios.post(`${api_node}/api/v1/user`, {\n        name: data.name,\n        email: data.email,\n        avatar: data.avatar,\n        db: true,\n        verified: data.verified,\n        cover_image: data.cover_image,\n        profile_image: data.profile_image,\n        handle: data.handle,\n        address: user === null || user === void 0 ? void 0 : user.addr,\n        bio: data.bio,\n        url: data.url,\n        twitter: data.twitter,\n        instagram: data.instagram\n      });\n    }\n\n    console.log(collectionError);\n\n    if (collectionError) {\n      console.log('err');\n      setError(true);\n      return;\n    }\n\n    await axios.put(`${api_node}/api/v1/user/verify`, {\n      verify: true,\n      address: user === null || user === void 0 ? void 0 : user.addr\n    });\n    setSuccess(true);\n    await fetchUserData();\n    setVerifying(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(styles.user, className),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.avatar,\n        children: data.profile_image ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://nfluence-assets.s3.amazonaws.com/${user === null || user === void 0 ? void 0 : user.addr}-profile`,\n          alt: \"Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/png;base64,${data.avatar}`,\n          alt: \"Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 125\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.name,\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.code,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.number,\n          children: [\"@\", data.handle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.info,\n        children: data.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), data.url ? /*#__PURE__*/_jsxDEV(\"a\", {\n        className: styles.site,\n        href: `https://${data.url}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"globe\",\n          size: \"16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: data.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), profile.handle === handle ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.btns,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: cn(\"button button-small\", {\n              [styles.active]: visible\n            }, styles.button),\n            onClick: () => setVisible(!visible),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Unfollow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 47\n      }, this), data.address !== (user === null || user === void 0 ? void 0 : user.addr) || collection ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.btns,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: cn(\"button button-small\", {\n              [styles.active]: visible\n            }, styles.button),\n            onClick: verify,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: verifying ? 'One moment...' : \"Verify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 63\n      }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"You're now verified!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 22\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Something went wrong, please contact us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.socials,\n        children: socials.map((x, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n          className: styles.social,\n          href: x.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: x.title,\n            size: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(User, \"U32gKGKP1jtgpJMoXEkLB9BeDcQ=\", false, function () {\n  return [useAuth, useUser];\n});\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft/client/src/screens/Profile/User/index.js"],"names":["React","useState","cn","styles","Icon","useUser","useAuth","axios","stripe","require","process","env","STRIPE_TEST_API_KEY","api_node","NODE_ENV","REACT_APP_LOCAL_API_NODE","User","className","data","handle","visible","setVisible","verifying","setVerifying","success","setSuccess","error","setError","console","log","socials","title","url","twitter","instagram","user","collection","profile","createCollection","fetchUserData","collectionError","verify","account","accounts","create","type","accountLinks","id","refresh_url","return_url","window","location","assign","db","post","name","email","avatar","verified","cover_image","profile_image","address","addr","bio","put","code","number","info","site","control","btns","active","button","map","x","index","social"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./User.module.sass\";\nimport Icon from \"../../../components/Icon\";\nimport { useUser } from \"../../../providers/UserProvider\";\nimport { useAuth } from \"../../../providers/AuthProvider\";\nimport axios from \"axios\";\n// import { isStepDivisible } from \"react-range/lib/utils\";\n\nconst stripe = require('stripe')(process.env.STRIPE_TEST_API_KEY)\n\nlet api_node;\nprocess.env.NODE_ENV === \"production\"\n  ? api_node = ''\n  : api_node = process.env.REACT_APP_LOCAL_API_NODE\n\n\nconst User = ({ className, data, handle }) => {\n  const [visible, setVisible] = useState(false);\n  const [verifying, setVerifying] = useState(false);\n  const [success, setSuccess] = useState(false)\n  const [error, setError] = useState(false)\n  console.log('data', data)\n\n  const socials = [\n    {\n      title: \"twitter\",\n      url: `https://twitter.com/${data.twitter !== null ? data.twitter : ''}`,\n    },\n    {\n      title: \"instagram\",\n      url: `https://www.instagram.com/${data.instagram !== null ? data.instagram : ''}`,\n    },\n  ];\n\n  const { user } = useAuth()\n  const { collection, profile, createCollection, fetchUserData, collectionError } = useUser()\n  console.log(\"collection\", collection)\n  console.log('err', collectionError)\n\n  const verify = async () => {\n    setVerifying(true)\n    console.log(collectionError)\n    await createCollection()\n\n    const account = await stripe.accounts.create({\n      type: 'express'\n    });\n\n    const accounts = await stripe.accountLinks.create({\n      account: account.id,\n      refresh_url: 'https://example.com/reauth',\n      return_url: 'https://nsftonight.com/user',\n      type: 'account_onboarding',\n    });\n\n    window.location.assign(accounts.url)\n    \n    if (!data.db) {\n      console.log('adding to db')\n      await axios.post(`${api_node}/api/v1/user`, {\n        name: data.name,\n        email: data.email,\n        avatar: data.avatar,\n        db: true,\n        verified: data.verified,\n        cover_image: data.cover_image,\n        profile_image: data.profile_image,\n        handle: data.handle,\n        address: user?.addr,\n        bio: data.bio,\n        url: data.url,\n        twitter: data.twitter,\n        instagram: data.instagram\n      })\n      \n    }\n    console.log(collectionError)\n    if (collectionError) {\n      console.log('err')\n      setError(true)\n      return\n    }\n    await axios.put(`${api_node}/api/v1/user/verify`, {\n      verify: true,\n      address: user?.addr\n    })\n    setSuccess(true)\n    await fetchUserData()\n    setVerifying(false)\n  }\n\n\n  return (\n    <>\n      <div className={cn(styles.user, className)}>\n        <div className={styles.avatar}>\n        {data.profile_image ? <img src={`https://nfluence-assets.s3.amazonaws.com/${user?.addr}-profile`} alt=\"Avatar\" /> : <img src={`data:image/png;base64,${data.avatar}`} alt=\"Avatar\" />}\n        </div>\n        <div className={styles.name}>{data.name}</div>\n        <div className={styles.code}>\n          <div className={styles.number}>@{data.handle}</div>\n        </div>\n        <div className={styles.info}>\n          {data.bio}\n        </div>\n        {data.url ? <a\n          className={styles.site}\n          href={`https://${data.url}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon name=\"globe\" size=\"16\" />\n          <span>{data.url}</span>\n        </a> : <></>}\n        {profile.handle === handle ? <></> : (<div className={styles.control}>\n          <div className={styles.btns}>\n            <button\n              className={cn(\n                \"button button-small\",\n                { [styles.active]: visible },\n                styles.button\n              )}\n              onClick={() => setVisible(!visible)}\n            >\n              <span>Follow</span>\n              <span>Unfollow</span>\n            </button>\n          </div>\n        </div>)}\n        {data.address !== user?.addr || collection ? <></> : (<div className={styles.control}>\n          <div className={styles.btns}>\n            <button\n              className={cn(\n                \"button button-small\",\n                { [styles.active]: visible },\n                styles.button\n              )}\n              onClick={verify}\n            >\n              <span>{verifying ? 'One moment...' : \"Verify\"}</span>\n            </button>\n          </div>\n        </div>)}\n        {success && (<span>You're now verified!</span>)}\n        {error && (<span>Something went wrong, please contact us</span>)}\n        <div className={styles.socials}>\n          {socials.map((x, index) => (\n            <a\n              className={styles.social}\n              href={x.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              key={index}\n            >\n              <Icon name={x.title} size=\"20\" />\n            </a>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}