{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer } from \"react\";\nimport { defaultReducer } from \"../reducer/defaultReducer\";\nimport Identicon from \"identicon.js\";\nimport axios from \"axios\";\nimport { AVATAR_DEFAULT } from \"../components/Header/User/avatar-default\";\nlet api_node;\nprocess.env.NODE_ENV === \"production\" ? api_node = '' : api_node = process.env.REACT_APP_LOCAL_API_NODE;\nexport default function useProfileData(user) {\n  _s();\n\n  const [state, dispatch] = useReducer(defaultReducer, {\n    loading: false,\n    error: false,\n    data: [{\n      avatar: AVATAR_DEFAULT,\n      name: 'new_user',\n      handle: user === null || user === void 0 ? void 0 : user.addr,\n      cover_image: false,\n      profile_image: false,\n      email: '',\n      verified: false\n    }]\n  });\n\n  const fetchUserData = async () => {\n    dispatch({\n      type: 'PROCESSING'\n    });\n    let hash;\n    user ? hash = '0x0000000000000' : hash = user === null || user === void 0 ? void 0 : user.addr;\n    let avatar = new Identicon(hash).toString();\n\n    try {\n      const api = await axios.get(`${api_node}/api/v1/user/${user === null || user === void 0 ? void 0 : user.addr}`);\n      const serverResponse = api.data;\n\n      if (serverResponse.length > 0) {\n        dispatch({\n          type: 'SUCCESS',\n          payload: serverResponse\n        });\n      }\n\n      dispatch({\n        type: 'SUCCESS',\n        payload: [{\n          avatar: avatar,\n          name: 'new_user',\n          handle: user === null || user === void 0 ? void 0 : user.addr,\n          cover_image: serverResponse[0].cover_image,\n          profile_image: serverResponse[0].profile_image,\n          email: serverResponse[0].email,\n          verified: true\n        }]\n      });\n    } catch (err) {\n      dispatch({\n        type: 'ERROR'\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchUserData();\n  }, [user === null || user === void 0 ? void 0 : user.addr]);\n  return { ...state,\n    fetchUserData\n  };\n}\n\n_s(useProfileData, \"aMKpQiXQ8Ce8QorGO9k/bylHZfY=\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft-v3/client/src/hooks/use-profile-data.hook.js"],"names":["useEffect","useReducer","defaultReducer","Identicon","axios","AVATAR_DEFAULT","api_node","process","env","NODE_ENV","REACT_APP_LOCAL_API_NODE","useProfileData","user","state","dispatch","loading","error","data","avatar","name","handle","addr","cover_image","profile_image","email","verified","fetchUserData","type","hash","toString","api","get","serverResponse","length","payload","err"],"mappings":"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","sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport { defaultReducer } from \"../reducer/defaultReducer\";\nimport Identicon from \"identicon.js\";\nimport axios from \"axios\";\nimport { AVATAR_DEFAULT } from \"../components/Header/User/avatar-default\";\n\nlet api_node;\nprocess.env.NODE_ENV === \"production\"\n  ? api_node = ''\n  : api_node = process.env.REACT_APP_LOCAL_API_NODE\n\nexport default function useProfileData(user) {\n    const [state, dispatch] = useReducer(defaultReducer, {\n        loading: false,\n        error: false,\n        data: [{\n            avatar: AVATAR_DEFAULT,\n            name: 'new_user',\n            handle: user?.addr,\n            cover_image: false,\n            profile_image: false,\n            email: '',\n            verified: false\n          }]\n      })\n\n      const fetchUserData = async () => {\n        dispatch({ type: 'PROCESSING' })\n        let hash;\n        user ? hash = '0x0000000000000' : hash = user?.addr\n        let avatar = new Identicon(hash).toString()\n        try {\n          const api = await axios.get(`${api_node}/api/v1/user/${user?.addr}`)\n          const serverResponse = api.data;\n          if (serverResponse.length > 0) {\n            dispatch({ type: 'SUCCESS', payload: serverResponse })\n          }\n          dispatch({ type: 'SUCCESS', payload: [{\n              avatar: avatar,\n              name: 'new_user',\n              handle: user?.addr,\n              cover_image: serverResponse[0].cover_image,\n              profile_image: serverResponse[0].profile_image,\n              email: serverResponse[0].email,\n              verified: true\n            }]})\n        } catch(err) {\n          dispatch({ type: 'ERROR' })\n        }\n      }\n\n      useEffect(() => {\n        fetchUserData()\n      }, [user?.addr])\n\n    return {\n        ...state,\n        fetchUserData\n    }\n}"]},"metadata":{},"sourceType":"module"}