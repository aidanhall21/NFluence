{"ast":null,"code":"var _jsxFileName = \"/Users/aidanhall/Desktop/nsft-v3/src/providers/TxProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport TxDetails from '../components/TxDetails';\nimport Spinner from '../components/Spinner';\nimport { decode, getTransactionStatus, send, tx } from '@onflow/fcl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst txContext = /*#__PURE__*/React.createContext();\nexport default function TxProvider({\n  children\n}) {\n  _s();\n\n  const [txs, setTxs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getLocalTxs(); //eslint-disable-next-line\n  }, []);\n\n  const renderTxs = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"txs__list\",\n      children: txs.map(tx => /*#__PURE__*/_jsxDEV(TxDetails, {\n        id: tx === null || tx === void 0 ? void 0 : tx.id\n      }, tx === null || tx === void 0 ? void 0 : tx.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getLocalTxs = async () => {\n    const txString = window.localStorage.getItem('txs');\n\n    if (!txString || txString.length === 0) {\n      setLoading(false);\n      return;\n    }\n\n    const localTxs = txString === null || txString === void 0 ? void 0 : txString.split(\",\");\n    let runningTxs = [];\n\n    for (let index = 0; index < localTxs.length; index++) {\n      const id = localTxs[index];\n      const t = await getTxStatus(id);\n\n      if ((t === null || t === void 0 ? void 0 : t.status) === 4) {\n        continue;\n      }\n\n      tx(id).subscribe(s => updateTxStatus(s === null || s === void 0 ? void 0 : s.status, id));\n      runningTxs.push(id);\n    }\n\n    localStorage.setItems('txs', runningTxs.toString());\n    setTxs(runningTxs.map(t => ({\n      id: t\n    })));\n    setLoading(false);\n  };\n\n  const addTx = txID => {\n    let transaction = {\n      id: txID\n    };\n    setTxs(prev => [...prev, transaction]);\n    tx(txID).subscribe(s => updateTxStatus(s === null || s === void 0 ? void 0 : s.status, transaction === null || transaction === void 0 ? void 0 : transaction.id));\n    window.localStorage.setItem('txs', [...txs, transaction === null || transaction === void 0 ? void 0 : transaction.id].toString());\n  };\n\n  const updateTxStatus = (status, txID) => {\n    if (status === 4) {\n      removeTx(txID);\n      return;\n    }\n\n    let tx = txs.find(t => t.id === txID);\n    let oldTxs = txs.filter(t => t.id !== txID);\n    if (!tx) return;\n    let updatedTxs = { ...tx,\n      status\n    };\n    setTxs([...oldTxs, updatedTxs]);\n  };\n\n  const removeTx = txID => {\n    let newTxs = txs.filter(t => t.id !== txID);\n    setTxs(newTxs);\n  };\n\n  const getTxStatus = async txID => {\n    const status = await send([getTransactionStatus(txID)]).then(decode);\n    return status;\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(txContext.Provider, {\n    value: {\n      runningTxs: txs.length !== 0,\n      addTx\n    },\n    children: [renderTxs(), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TxProvider, \"/6nl1jwARyzT5sCyjf7N5Yxf86w=\");\n\n_c = TxProvider;\nexport function useTxs() {\n  _s2();\n\n  return useContext(txContext);\n}\n\n_s2(useTxs, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TxProvider\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft-v3/src/providers/TxProvider.js"],"names":["React","useContext","useEffect","useState","TxDetails","Spinner","decode","getTransactionStatus","send","tx","txContext","createContext","TxProvider","children","txs","setTxs","loading","setLoading","getLocalTxs","renderTxs","map","id","txString","window","localStorage","getItem","length","localTxs","split","runningTxs","index","t","getTxStatus","status","subscribe","s","updateTxStatus","push","setItems","toString","addTx","txID","transaction","prev","setItem","removeTx","find","oldTxs","filter","updatedTxs","newTxs","then","useTxs"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\n\nimport TxDetails from '../components/TxDetails'\nimport Spinner from '../components/Spinner'\nimport { decode, getTransactionStatus, send, tx } from '@onflow/fcl'\n\nconst txContext = React.createContext()\n\nexport default function TxProvider({ children }) {\n  const [txs, setTxs] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    getLocalTxs()\n    //eslint-disable-next-line\n  }, [])\n\n  const renderTxs = () => {\n    return (\n      <div className='txs__list'>\n        {txs.map(tx => <TxDetails id={tx?.id} key={tx?.id} />)}\n      </div>\n    )\n  }\n\n  const getLocalTxs = async () => {\n    const txString = window.localStorage.getItem('txs')\n\n    if(!txString || txString.length === 0) {\n      setLoading(false)\n      return\n    }\n\n    const localTxs = txString?.split(\",\")\n    let runningTxs = []\n\n    for (let index = 0; index < localTxs.length; index++) {\n      const id = localTxs[index];\n      const t = await getTxStatus(id);\n      if(t?.status === 4) {\n        continue\n      }\n      tx(id).subscribe(s => updateTxStatus(s?.status, id))\n      runningTxs.push(id)\n    }\n\n    localStorage.setItems('txs', runningTxs.toString())\n    setTxs(runningTxs.map(t => ({  id: t })))\n    setLoading(false)\n  }\n\n  const addTx = (txID) => {\n    let transaction = { id: txID }\n    setTxs(prev => [...prev, transaction])\n    tx(txID).subscribe(s => updateTxStatus(s?.status, transaction?.id))\n    window.localStorage.setItem('txs', [...txs, transaction?.id].toString())\n  }\n\n  const updateTxStatus = (status, txID) => {\n    if(status === 4) {\n      removeTx(txID)\n      return\n    }\n    let tx = txs.find(t => t.id === txID)\n    let oldTxs = txs.filter(t => t.id !== txID)\n    if(!tx) return \n    let updatedTxs = {...tx, status}\n    setTxs([...oldTxs, updatedTxs])\n  }\n\n  const removeTx = (txID) => {\n    let newTxs = txs.filter(t => t.id !== txID)\n    setTxs(newTxs)\n  }\n\n  const getTxStatus = async (txID) => {\n    const status = await send([\n      getTransactionStatus(txID)\n    ])\n    .then(decode)\n    return status\n  }\n\n  if (loading) return <Spinner />\n\n  return (\n    <txContext.Provider value={{\n      runningTxs: txs.length !== 0,\n      addTx,\n    }}>\n      {renderTxs()}\n      {children}\n    </txContext.Provider>\n  )\n}\n\nexport function useTxs() {\n  return useContext(txContext)\n}"]},"metadata":{},"sourceType":"module"}