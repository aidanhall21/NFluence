{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { mutate, query, tx } from '@onflow/fcl';\nimport { useEffect, useState } from 'react';\nimport { CHECK_COLLECTION } from '../flow/check-collection.script';\nimport { CREATE_COLLECTION } from '../flow/create-collection.tx';\nimport { DELETE_COLLECTION } from '../flow/delete-collection.tx';\nexport default function useCollection(user) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [collection, setCollection] = useState(false);\n  useEffect(() => {\n    if (!(user === null || user === void 0 ? void 0 : user.addr)) return;\n\n    const checkCollection = async () => {\n      try {\n        let res = await query({\n          cadence: CHECK_COLLECTION,\n          args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address)]\n        });\n        setCollection(res);\n        console.log(res);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n      }\n    };\n\n    checkCollection();\n  }, []);\n\n  const createCollection = async () => {\n    try {\n      let res = await mutate({\n        cadence: CREATE_COLLECTION,\n        limit: 55\n      });\n      await tx(res).onceSealed();\n      setCollection(true);\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  const deleteCollection = async () => {\n    try {\n      let res = await mutate({\n        cadence: DELETE_COLLECTION,\n        limit: 75\n      });\n      await tx(res).onceSealed();\n      setCollection(false);\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n    }\n\n    window.location.reload();\n  };\n\n  return {\n    loading,\n    collection,\n    createCollection,\n    deleteCollection\n  };\n}\n\n_s(useCollection, \"CpdQmOeNjxT3mncrSAx6rB1ifWM=\");","map":{"version":3,"sources":["/Users/aidanhall/Desktop/nsft-v3/src/hooks/use-collection.hook.js"],"names":["mutate","query","tx","useEffect","useState","CHECK_COLLECTION","CREATE_COLLECTION","DELETE_COLLECTION","useCollection","user","loading","setLoading","collection","setCollection","addr","checkCollection","res","cadence","args","arg","t","Address","console","log","err","createCollection","limit","onceSealed","deleteCollection","window","location","reload"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,EAAxB,QAAkC,aAAlC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AAEA,eAAe,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAAA;;AAC1C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,EAACM,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEK,IAAP,CAAH,EAAgB;;AAChB,UAAMC,eAAe,GAAG,YAAY;AAClC,UAAI;AACF,YAAIC,GAAG,GAAG,MAAMf,KAAK,CAAC;AACpBgB,UAAAA,OAAO,EAAEZ,gBADW;AAEpBa,UAAAA,IAAI,EAAE,CAACC,GAAD,EAAMC,CAAN,KAAY,CAACD,GAAG,CAACV,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEK,IAAP,EAAaM,CAAC,CAACC,OAAf,CAAJ;AAFE,SAAD,CAArB;AAIAR,QAAAA,aAAa,CAACG,GAAD,CAAb;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACAL,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OARD,CAQE,OAAOa,GAAP,EAAY;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAbD;;AAcAI,IAAAA,eAAe;AAChB,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,QAAMU,gBAAgB,GAAG,YAAY;AACnC,QAAI;AACF,UAAIT,GAAG,GAAG,MAAMhB,MAAM,CAAC;AACrBiB,QAAAA,OAAO,EAAEX,iBADY;AAErBoB,QAAAA,KAAK,EAAE;AAFc,OAAD,CAAtB;AAIA,YAAMxB,EAAE,CAACc,GAAD,CAAF,CAAQW,UAAR,EAAN;AACAd,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAPD,CAOE,OAAOW,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAZD;;AAcA,QAAMiB,gBAAgB,GAAG,YAAY;AACnC,QAAG;AACD,UAAIZ,GAAG,GAAG,MAAMhB,MAAM,CAAC;AACrBiB,QAAAA,OAAO,EAAEV,iBADY;AAErBmB,QAAAA,KAAK,EAAE;AAFc,OAAD,CAAtB;AAIA,YAAMxB,EAAE,CAACc,GAAD,CAAF,CAAQW,UAAR,EAAN;AACAd,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAPD,CAOE,OAAOW,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDkB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAbD;;AAeA,SAAO;AACLrB,IAAAA,OADK;AAELE,IAAAA,UAFK;AAGLa,IAAAA,gBAHK;AAILG,IAAAA;AAJK,GAAP;AAMD;;GA1DuBpB,a","sourcesContent":["import { mutate, query, tx } from '@onflow/fcl'\nimport { useEffect, useState } from 'react'\nimport { CHECK_COLLECTION } from '../flow/check-collection.script'\nimport { CREATE_COLLECTION } from '../flow/create-collection.tx'\nimport { DELETE_COLLECTION } from '../flow/delete-collection.tx'\n\nexport default function useCollection(user) {\n  const [loading, setLoading] = useState(true)\n  const [collection, setCollection] = useState(false)\n\n  useEffect(() => {\n    if(!user?.addr) return\n    const checkCollection = async () => {\n      try {\n        let res = await query({\n          cadence: CHECK_COLLECTION,\n          args: (arg, t) => [arg(user?.addr, t.Address)]\n        })\n        setCollection(res)\n        console.log(res)\n        setLoading(false)\n      } catch (err) {\n        console.log(err)\n        setLoading(false)\n      }\n    }\n    checkCollection()\n  }, [])\n\n  const createCollection = async () => {\n    try {\n      let res = await mutate({\n        cadence: CREATE_COLLECTION,\n        limit: 55\n      })\n      await tx(res).onceSealed()\n      setCollection(true)\n    } catch (err) {\n      console.log(err)\n      setLoading(false)\n    }\n  }\n\n  const deleteCollection = async () => {\n    try{\n      let res = await mutate({\n        cadence: DELETE_COLLECTION,\n        limit: 75,\n      })\n      await tx(res).onceSealed()\n      setCollection(false)\n    } catch (err) {\n      console.log(err)\n      setLoading(false)\n    }\n    window.location.reload()\n  }\n\n  return {\n    loading,\n    collection,\n    createCollection,\n    deleteCollection\n  }\n}\n"]},"metadata":{},"sourceType":"module"}